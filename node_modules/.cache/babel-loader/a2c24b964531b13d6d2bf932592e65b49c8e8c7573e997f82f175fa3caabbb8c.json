{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login'; // Import the Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'https://localhost:5133/api',\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n    'Content-Type': 'application/json'\n  }\n});\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: ''\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    content: ''\n  });\n  const navigate = useNavigate();\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axiosInstance.get('/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    if (isLoggedIn) {\n      loadMovies();\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  }\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n  const MovieList = () => {\n    const loadPosts = async movieId => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    const loadComments = async (movieId, postId) => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    const handleCreateMovie = async e => {\n      e.preventDefault();\n      try {\n        const response = await axiosInstance.post('/movies', newMovie);\n        setMovies(prev => [...prev, response.data]);\n        setNewMovie({\n          title: '',\n          description: ''\n        });\n      } catch (error) {\n        console.error('Error creating movie:', error);\n      }\n    };\n    const handleCreatePost = async (movieId, e) => {\n      e.preventDefault();\n      try {\n        const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPost);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: [...(prev[movieId] || []), response.data]\n        }));\n        setNewPost({\n          title: '',\n          body: ''\n        });\n      } catch (error) {\n        console.error('Error creating post:', error);\n      }\n    };\n    const handleCreateComment = async (movieId, postId, e) => {\n      e.preventDefault();\n      try {\n        const response = await axiosInstance.post(`/movies/${movieId}/posts/${postId}/comments`, newComment);\n        setComments(prev => ({\n          ...prev,\n          [postId]: [...(prev[postId] || []), response.data]\n        }));\n        setNewComment({\n          content: ''\n        });\n      } catch (error) {\n        console.error('Error creating comment:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateMovie,\n          className: \"movie-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Movie Title\",\n            value: newMovie.title,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Movie Description\",\n            value: newMovie.description,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n                loadPosts(movie.id);\n              },\n              children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Posts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleCreatePost(movie.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Post Title\",\n                  value: newPost.title,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    title: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Post Body\",\n                  value: newPost.body,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    body: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 45\n              }, this), posts[movie.id].length > 0 ? posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadComments(movie.id, post.id),\n                  children: \"Show Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 57\n                }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Comment Content\",\n                      value: newComment.content,\n                      onChange: e => setNewComment({\n                        ...newComment,\n                        content: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Add Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 65\n                  }, this), comments[post.id].length > 0 ? comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: comment.content\n                  }, comment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 73\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No comments available.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 61\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 53\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No posts available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 41\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"aFZ42hOIqNXgABA0zIoPlQSHZmA=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Header","Footer","Modal","Route","Routes","useNavigate","Login","jsxDEV","_jsxDEV","axiosInstance","create","baseURL","headers","localStorage","getItem","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","newMovie","setNewMovie","title","description","newPost","setNewPost","body","newComment","setNewComment","content","navigate","isLoggedIn","loadMovies","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","MovieList","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","post","handleCreatePost","handleCreateComment","className","children","onClick","onSubmit","type","placeholder","value","onChange","target","length","map","movie","id","comment","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login'; // Import the Login component\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://localhost:5133/api',\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json',\n    }\n});\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n    const [newMovie, setNewMovie] = useState({ title: '', description: '' });\n    const [newPost, setNewPost] = useState({ title: '', body: '' });\n    const [newComment, setNewComment] = useState({ content: '' });\n\n    const navigate = useNavigate();\n    const isLoggedIn = localStorage.getItem('accessToken') !== null;\n\n    useEffect(() => {\n        const loadMovies = async () => {\n            try {\n                const response = await axiosInstance.get('/movies');\n                setMovies(response.data);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        if (isLoggedIn) {\n            loadMovies();\n        }\n    }, [isLoggedIn]);\n\n    if (!isLoggedIn) {\n        return <Login />;\n    }\n\n    const handleLogout = () => {\n        localStorage.removeItem('accessToken');\n        navigate('/login');\n    };\n\n    const MovieList = () => {\n        const loadPosts = async (movieId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n                setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        const loadComments = async (movieId, postId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: response.data,\n                }));\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        };\n\n        const handleCreateMovie = async (e) => {\n            e.preventDefault();\n            try {\n                const response = await axiosInstance.post('/movies', newMovie);\n                setMovies((prev) => [...prev, response.data]);\n                setNewMovie({ title: '', description: '' });\n            } catch (error) {\n                console.error('Error creating movie:', error);\n            }\n        };\n\n        const handleCreatePost = async (movieId, e) => {\n            e.preventDefault();\n            try {\n                const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPost);\n                setPosts((prev) => ({\n                    ...prev,\n                    [movieId]: [...(prev[movieId] || []), response.data],\n                }));\n                setNewPost({ title: '', body: '' });\n            } catch (error) {\n                console.error('Error creating post:', error);\n            }\n        };\n\n        const handleCreateComment = async (movieId, postId, e) => {\n            e.preventDefault();\n            try {\n                const response = await axiosInstance.post(\n                    `/movies/${movieId}/posts/${postId}/comments`,\n                    newComment\n                );\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: [...(prev[postId] || []), response.data],\n                }));\n                setNewComment({ content: '' });\n            } catch (error) {\n                console.error('Error creating comment:', error);\n            }\n        };\n\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"content\">\n                    <h1>Movies List</h1>\n                    <button onClick={handleLogout}>Logout</button>\n\n                    <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                        <h2>Create New Movie</h2>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Movie Title\"\n                            value={newMovie.title}\n                            onChange={(e) => setNewMovie({ ...newMovie, title: e.target.value })}\n                        />\n                        <textarea\n                            placeholder=\"Movie Description\"\n                            value={newMovie.description}\n                            onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })}\n                        ></textarea>\n                        <button type=\"submit\">Add Movie</button>\n                    </form>\n\n                    {movies.length > 0 ? (\n                        <div className=\"movie-list\">\n                            {movies.map((movie) => (\n                                <div className=\"movie-item\" key={movie.id}>\n                                    <h2>{movie.title}</h2>\n                                    <p>{movie.description}</p>\n                                    <button\n                                        onClick={() => {\n                                            setExpandedMovieId((prev) =>\n                                                prev === movie.id ? null : movie.id\n                                            );\n                                            loadPosts(movie.id);\n                                        }}\n                                    >\n                                        {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                    </button>\n                                    {expandedMovieId === movie.id && posts[movie.id] && (\n                                        <div className=\"posts\">\n                                            <h3>Posts:</h3>\n                                            <form onSubmit={(e) => handleCreatePost(movie.id, e)}>\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Post Title\"\n                                                    value={newPost.title}\n                                                    onChange={(e) =>\n                                                        setNewPost({ ...newPost, title: e.target.value })\n                                                    }\n                                                />\n                                                <textarea\n                                                    placeholder=\"Post Body\"\n                                                    value={newPost.body}\n                                                    onChange={(e) =>\n                                                        setNewPost({ ...newPost, body: e.target.value })\n                                                    }\n                                                ></textarea>\n                                                <button type=\"submit\">Add Post</button>\n                                            </form>\n                                            {posts[movie.id].length > 0 ? (\n                                                posts[movie.id].map((post) => (\n                                                    <div className=\"post-item\" key={post.id}>\n                                                        <h4>{post.title}</h4>\n                                                        <p>{post.body}</p>\n                                                        <button\n                                                            onClick={() => loadComments(movie.id, post.id)}\n                                                        >\n                                                            Show Comments\n                                                        </button>\n                                                        {comments[post.id] && (\n                                                            <div className=\"comments\">\n                                                                <h5>Comments:</h5>\n                                                                <form\n                                                                    onSubmit={(e) =>\n                                                                        handleCreateComment(movie.id, post.id, e)\n                                                                    }\n                                                                >\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        placeholder=\"Comment Content\"\n                                                                        value={newComment.content}\n                                                                        onChange={(e) =>\n                                                                            setNewComment({ ...newComment, content: e.target.value })\n                                                                        }\n                                                                    />\n                                                                    <button type=\"submit\">Add Comment</button>\n                                                                </form>\n                                                                {comments[post.id].length > 0 ? (\n                                                                    comments[post.id].map((comment) => (\n                                                                        <p key={comment.id}>{comment.content}</p>\n                                                                    ))\n                                                                ) : (\n                                                                    <p>No comments available.</p>\n                                                                )}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))\n                                            ) : (\n                                                <p>No posts available.</p>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p>Loading movies...</p>\n                    )}\n                </div>\n                {modalVisible && <Modal />}\n                <Footer />\n            </div>\n        );\n    };\n\n    return (\n        <Routes>\n            <Route path=\"/\" element={<MovieList />} />\n            <Route path=\"/login\" element={<Login />} />\n        </Routes>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}