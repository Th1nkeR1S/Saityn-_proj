{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Importuojami komponentai\nimport Login from './Pages/Login';\nimport Movies from './Pages/Movies';\n\n// Funkcija, kuri tikrina, ar vartotojas yra prisijungęs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  // Patikriname, ar yra 'accessToken' localStorage\n  const token = localStorage.getItem('accessToken');\n  return token !== null;\n};\n\n// Apsaugotas komponentas, kuris leis pasiekti puslapį tik prisijungusiems vartotojams\nconst ProtectedRoute = ({\n  children\n}) => {\n  if (!isAuthenticated()) {\n    // Jei vartotojas nėra prisijungęs, nukreipiame į login puslapį\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_c = ProtectedRoute;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Įprastas patikrinimas dėl galiojančio refresh token ir access token\n    const checkToken = async () => {\n      try {\n        const token = localStorage.getItem('accessToken');\n        if (!token) {\n          // Jei tokeno nėra, galbūt reikia užregistruoti, arba atlikti loginą\n          setLoading(false);\n          return;\n        }\n\n        // Patikriname, ar 'accessToken' galioja\n        await axios.get('http://localhost:5000/api/movies', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setLoading(false);\n      } catch (error) {\n        // Jei nevalidojama arba įvyko klaida, vartotojas turi prisijungti\n        setLoading(false);\n        localStorage.removeItem('accessToken'); // Pašaliname tokeną\n      }\n    };\n    checkToken();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 16\n    }, this); // Galite parodyti animaciją, kol patikrinama sesija\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/movies\",\n        element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          children: /*#__PURE__*/_jsxDEV(Movies, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"J7PPXooW06IQ11rfabbvgk72KFw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","Navigate","axios","Login","Movies","jsxDEV","_jsxDEV","isAuthenticated","token","localStorage","getItem","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","loading","setLoading","checkToken","get","headers","Authorization","error","removeItem","path","element","_c2","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\n\n// Importuojami komponentai\nimport Login from './Pages/Login';\nimport Movies from './Pages/Movies';\n\n// Funkcija, kuri tikrina, ar vartotojas yra prisijungęs\nconst isAuthenticated = () => {\n    // Patikriname, ar yra 'accessToken' localStorage\n    const token = localStorage.getItem('accessToken');\n    return token !== null;\n};\n\n// Apsaugotas komponentas, kuris leis pasiekti puslapį tik prisijungusiems vartotojams\nconst ProtectedRoute = ({ children }) => {\n    if (!isAuthenticated()) {\n        // Jei vartotojas nėra prisijungęs, nukreipiame į login puslapį\n        return <Navigate to=\"/login\" />;\n    }\n    return children;\n};\n\nconst App = () => {\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        // Įprastas patikrinimas dėl galiojančio refresh token ir access token\n        const checkToken = async () => {\n            try {\n                const token = localStorage.getItem('accessToken');\n                if (!token) {\n                    // Jei tokeno nėra, galbūt reikia užregistruoti, arba atlikti loginą\n                    setLoading(false);\n                    return;\n                }\n                \n                // Patikriname, ar 'accessToken' galioja\n                await axios.get('http://localhost:5000/api/movies', {\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n                \n                setLoading(false);\n            } catch (error) {\n                // Jei nevalidojama arba įvyko klaida, vartotojas turi prisijungti\n                setLoading(false);\n                localStorage.removeItem('accessToken'); // Pašaliname tokeną\n            }\n        };\n\n        checkToken();\n    }, []);\n\n    if (loading) {\n        return <div>Loading...</div>;  // Galite parodyti animaciją, kol patikrinama sesija\n    }\n\n    return (\n        <Router>\n            <Routes>\n                {/* Viešas Login puslapis */}\n                <Route path=\"/login\" element={<Login />} />\n                \n                {/* Apsaugotas puslapis, kuris rodo tik prisijungusiems vartotojams */}\n                <Route\n                    path=\"/movies\"\n                    element={\n                        <ProtectedRoute>\n                            <Movies />\n                        </ProtectedRoute>\n                    }\n                />\n                \n                {/* Galite pridėti daugiau puslapių */}\n                <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,gBAAgB;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC1B;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACjD,OAAOF,KAAK,KAAK,IAAI;AACzB,CAAC;;AAED;AACA,MAAMG,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,IAAI,CAACL,eAAe,CAAC,CAAC,EAAE;IACpB;IACA,oBAAOD,OAAA,CAACL,QAAQ;MAACY,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;EACA,OAAOL,QAAQ;AACnB,CAAC;AAACM,EAAA,GANIP,cAAc;AAQpB,MAAMQ,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACA,MAAM4B,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACjD,IAAI,CAACF,KAAK,EAAE;UACR;UACAc,UAAU,CAAC,KAAK,CAAC;UACjB;QACJ;;QAEA;QACA,MAAMpB,KAAK,CAACsB,GAAG,CAAC,kCAAkC,EAAE;UAChDC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUlB,KAAK;UAClC;QACJ,CAAC,CAAC;QAEFc,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZ;QACAL,UAAU,CAAC,KAAK,CAAC;QACjBb,YAAY,CAACmB,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;MAC5C;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,OAAO,EAAE;IACT,oBAAOf,OAAA;MAAAM,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAE;EACnC;EAEA,oBACIX,OAAA,CAACR,MAAM;IAAAc,QAAA,eACHN,OAAA,CAACP,MAAM;MAAAa,QAAA,gBAEHN,OAAA,CAACN,KAAK;QAAC6B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAExB,OAAA,CAACH,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG3CX,OAAA,CAACN,KAAK;QACF6B,IAAI,EAAC,SAAS;QACdC,OAAO,eACHxB,OAAA,CAACK,cAAc;UAAAC,QAAA,eACXN,OAAA,CAACF,MAAM;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MACnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGFX,OAAA,CAACN,KAAK;QAAC6B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAExB,OAAA,CAACL,QAAQ;UAACY,EAAE,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAACG,EAAA,CAzDID,GAAG;AAAAY,GAAA,GAAHZ,GAAG;AA2DT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}