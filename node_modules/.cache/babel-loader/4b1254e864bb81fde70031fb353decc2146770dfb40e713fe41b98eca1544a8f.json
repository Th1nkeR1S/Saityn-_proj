{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  // Load movies from the API\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axios.get('https://localhost:5133/api/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    loadMovies();\n  }, []);\n\n  // Load posts for a specific movie\n  const loadPosts = async movieId => {\n    try {\n      const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`);\n      setPosts(prev => ({\n        ...prev,\n        [movieId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n\n  // Load comments for a specific post\n  const loadComments = async (movieId, postId) => {\n    try {\n      const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`);\n      setComments(prev => ({\n        ...prev,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movies List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-list\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n              loadPosts(movie.id);\n            },\n            children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Posts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this), posts[movie.id].length > 0 ? posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => loadComments(movie.id, post.id),\n                children: \"Show Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 53\n              }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comments\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Comments:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 61\n                }, this), comments[post.id].length > 0 ? comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: comment.content\n                }, comment.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 69\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No comments available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 57\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 49\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No posts available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleModal,\n            children: \"Show Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      toggleModal: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"yivRG6tKNhZ8Q5PLwFv/f2jxhbU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Header","Footer","Modal","jsxDEV","_jsxDEV","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","toggleModal","loadMovies","response","get","data","error","console","loadPosts","movieId","prev","loadComments","postId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","title","description","onClick","id","post","body","comment","content","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n\n    const toggleModal = () => {\n        setModalVisible(!modalVisible);\n    };\n\n    // Load movies from the API\n    useEffect(() => {\n        const loadMovies = async () => {\n            try {\n                const response = await axios.get('https://localhost:5133/api/movies');\n                setMovies(response.data);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n        loadMovies();\n    }, []);\n\n    // Load posts for a specific movie\n    const loadPosts = async (movieId) => {\n        try {\n            const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`);\n            setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    // Load comments for a specific post\n    const loadComments = async (movieId, postId) => {\n        try {\n            const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`);\n            setComments((prev) => ({\n                ...prev,\n                [postId]: response.data,\n            }));\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"content\">\n                <h1>Movies List</h1>\n                {movies.length > 0 ? (\n                    <div className=\"movie-list\">\n                        {movies.map((movie) => (\n                            <div className=\"movie-item\" key={movie.id}>\n                                <h2>{movie.title}</h2>\n                                <p>{movie.description}</p>\n                                <button\n                                    onClick={() => {\n                                        setExpandedMovieId((prev) =>\n                                            prev === movie.id ? null : movie.id\n                                        );\n                                        loadPosts(movie.id);\n                                    }}\n                                >\n                                    {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                </button>\n                                {expandedMovieId === movie.id && posts[movie.id] && (\n                                    <div className=\"posts\">\n                                        <h3>Posts:</h3>\n                                        {posts[movie.id].length > 0 ? (\n                                            posts[movie.id].map((post) => (\n                                                <div className=\"post-item\" key={post.id}>\n                                                    <h4>{post.title}</h4>\n                                                    <p>{post.body}</p>\n                                                    <button\n                                                        onClick={() => loadComments(movie.id, post.id)}\n                                                    >\n                                                        Show Comments\n                                                    </button>\n                                                    {comments[post.id] && (\n                                                        <div className=\"comments\">\n                                                            <h5>Comments:</h5>\n                                                            {comments[post.id].length > 0 ? (\n                                                                comments[post.id].map((comment) => (\n                                                                    <p key={comment.id}>{comment.content}</p>\n                                                                ))\n                                                            ) : (\n                                                                <p>No comments available.</p>\n                                                            )}\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            ))\n                                        ) : (\n                                            <p>No posts available.</p>\n                                        )}\n                                    </div>\n                                )}\n                                <button onClick={toggleModal}>Show Info</button>\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p>Loading movies...</p>\n                )}\n            </div>\n            {modalVisible && <Modal toggleModal={toggleModal} />}\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}