{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: ''\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    content: ''\n  });\n  const [token, setToken] = useState(localStorage.getItem('token') || '');\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Configure Axios with the token\n  const apiClient = axios.create({\n    baseURL: 'https://localhost:5133/api',\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  useEffect(() => {\n    // Only load movies if there's a token\n    if (token) {\n      loadMovies();\n    }\n  }, [token]); // When the token changes, load the movies\n\n  const loadMovies = async () => {\n    try {\n      const response = await apiClient.get('/movies');\n      setMovies(response.data);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    }\n  };\n  const loadPosts = async movieId => {\n    try {\n      const response = await apiClient.get(`/movies/${movieId}/posts`);\n      setPosts(prev => ({\n        ...prev,\n        [movieId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const loadComments = async (movieId, postId) => {\n    try {\n      const response = await apiClient.get(`/movies/${movieId}/posts/${postId}/comments`);\n      setComments(prev => ({\n        ...prev,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const handleCreateMovie = async e => {\n    e.preventDefault();\n    try {\n      const response = await apiClient.post('/movies', newMovie);\n      setMovies(prev => [...prev, response.data]);\n      setNewMovie({\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error creating movie:', error);\n    }\n  };\n  const handleCreatePost = async (movieId, e) => {\n    e.preventDefault();\n    try {\n      const response = await apiClient.post(`/movies/${movieId}/posts`, newPost);\n      setPosts(prev => ({\n        ...prev,\n        [movieId]: [...(prev[movieId] || []), response.data]\n      }));\n      setNewPost({\n        title: '',\n        body: ''\n      });\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleCreateComment = async (movieId, postId, e) => {\n    e.preventDefault();\n    try {\n      const response = await apiClient.post(`/movies/${movieId}/posts/${postId}/comments`, newComment);\n      setComments(prev => ({\n        ...prev,\n        [postId]: [...(prev[postId] || []), response.data]\n      }));\n      setNewComment({\n        content: ''\n      });\n    } catch (error) {\n      console.error('Error creating comment:', error);\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setIsLoading(true); // Show loading message\n    try {\n      const response = await axios.post('https://localhost:5133/api/login', loginData);\n      const userToken = response.data.token;\n      setToken(userToken); // Update the token state\n      localStorage.setItem('token', userToken);\n      setLoginData({\n        username: '',\n        password: ''\n      });\n\n      // After setting the token, load the movies immediately\n      loadMovies();\n    } catch (error) {\n      console.error('Error logging in:', error);\n    } finally {\n      setIsLoading(false); // Hide loading message\n    }\n  };\n  const handleLogout = () => {\n    setToken('');\n    localStorage.removeItem('token');\n    setMovies([]);\n    setPosts({});\n    setComments({});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), !token ?\n    /*#__PURE__*/\n    // Show login form if no token\n    _jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: loginData.username,\n        onChange: e => setLoginData({\n          ...loginData,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: loginData.password,\n        onChange: e => setLoginData({\n          ...loginData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading movies...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }, this) // Loading message while movies are fetched\n    : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateMovie,\n          className: \"movie-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Movie Title\",\n            value: newMovie.title,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Movie Description\",\n            value: newMovie.description,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n                loadPosts(movie.id);\n              },\n              children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 41\n            }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Posts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleCreatePost(movie.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Post Title\",\n                  value: newPost.title,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    title: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Post Body\",\n                  value: newPost.body,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    body: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 49\n              }, this), posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadComments(movie.id, post.id),\n                  children: \"Show Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 57\n                }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Comment Content\",\n                      value: newComment.content,\n                      onChange: e => setNewComment({\n                        ...newComment,\n                        content: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Add Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 65\n                  }, this), comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: comment.content\n                  }, comment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 69\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 61\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 53\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 45\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"57f1ADOVfCLebjPIEvB1sXc6tPI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","posts","setPosts","comments","setComments","newMovie","setNewMovie","title","description","newPost","setNewPost","body","newComment","setNewComment","content","token","setToken","localStorage","getItem","loginData","setLoginData","username","password","isLoading","setIsLoading","apiClient","create","baseURL","headers","Authorization","loadMovies","response","get","data","error","console","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","post","handleCreatePost","handleCreateComment","handleLogin","userToken","setItem","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","length","map","movie","id","comment","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n    const [newMovie, setNewMovie] = useState({ title: '', description: '' });\n    const [newPost, setNewPost] = useState({ title: '', body: '' });\n    const [newComment, setNewComment] = useState({ content: '' });\n    const [token, setToken] = useState(localStorage.getItem('token') || '');\n    const [loginData, setLoginData] = useState({ username: '', password: '' });\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Configure Axios with the token\n    const apiClient = axios.create({\n        baseURL: 'https://localhost:5133/api',\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n\n    useEffect(() => {\n        // Only load movies if there's a token\n        if (token) {\n            loadMovies();\n        }\n    }, [token]); // When the token changes, load the movies\n\n    const loadMovies = async () => {\n        try {\n            const response = await apiClient.get('/movies');\n            setMovies(response.data);\n        } catch (error) {\n            console.error('Error fetching movies:', error);\n        }\n    };\n\n    const loadPosts = async (movieId) => {\n        try {\n            const response = await apiClient.get(`/movies/${movieId}/posts`);\n            setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    const loadComments = async (movieId, postId) => {\n        try {\n            const response = await apiClient.get(`/movies/${movieId}/posts/${postId}/comments`);\n            setComments((prev) => ({\n                ...prev,\n                [postId]: response.data,\n            }));\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n        }\n    };\n\n    const handleCreateMovie = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await apiClient.post('/movies', newMovie);\n            setMovies((prev) => [...prev, response.data]);\n            setNewMovie({ title: '', description: '' });\n        } catch (error) {\n            console.error('Error creating movie:', error);\n        }\n    };\n\n    const handleCreatePost = async (movieId, e) => {\n        e.preventDefault();\n        try {\n            const response = await apiClient.post(`/movies/${movieId}/posts`, newPost);\n            setPosts((prev) => ({\n                ...prev,\n                [movieId]: [...(prev[movieId] || []), response.data],\n            }));\n            setNewPost({ title: '', body: '' });\n        } catch (error) {\n            console.error('Error creating post:', error);\n        }\n    };\n\n    const handleCreateComment = async (movieId, postId, e) => {\n        e.preventDefault();\n        try {\n            const response = await apiClient.post(\n                `/movies/${movieId}/posts/${postId}/comments`,\n                newComment\n            );\n            setComments((prev) => ({\n                ...prev,\n                [postId]: [...(prev[postId] || []), response.data],\n            }));\n            setNewComment({ content: '' });\n        } catch (error) {\n            console.error('Error creating comment:', error);\n        }\n    };\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setIsLoading(true); // Show loading message\n        try {\n            const response = await axios.post('https://localhost:5133/api/login', loginData);\n            const userToken = response.data.token;\n            setToken(userToken); // Update the token state\n            localStorage.setItem('token', userToken);\n            setLoginData({ username: '', password: '' });\n\n            // After setting the token, load the movies immediately\n            loadMovies();\n        } catch (error) {\n            console.error('Error logging in:', error);\n        } finally {\n            setIsLoading(false); // Hide loading message\n        }\n    };\n\n    const handleLogout = () => {\n        setToken('');\n        localStorage.removeItem('token');\n        setMovies([]);\n        setPosts({});\n        setComments({});\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            {!token ? (\n                // Show login form if no token\n                <form onSubmit={handleLogin} className=\"login-form\">\n                    <h2>Login</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        value={loginData.username}\n                        onChange={(e) => setLoginData({ ...loginData, username: e.target.value })}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={loginData.password}\n                        onChange={(e) => setLoginData({ ...loginData, password: e.target.value })}\n                    />\n                    <button type=\"submit\">Login</button>\n                </form>\n            ) : isLoading ? (\n                <p>Loading movies...</p> // Loading message while movies are fetched\n            ) : (\n                <>\n                    <button onClick={handleLogout}>Logout</button>\n                    <div className=\"content\">\n                        <h1>Movies List</h1>\n                        <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                            <h2>Create New Movie</h2>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Movie Title\"\n                                value={newMovie.title}\n                                onChange={(e) => setNewMovie({ ...newMovie, title: e.target.value })}\n                            />\n                            <textarea\n                                placeholder=\"Movie Description\"\n                                value={newMovie.description}\n                                onChange={(e) =>\n                                    setNewMovie({ ...newMovie, description: e.target.value })\n                                }\n                            ></textarea>\n                            <button type=\"submit\">Add Movie</button>\n                        </form>\n\n                        {movies.length > 0 ? (\n                            <div className=\"movie-list\">\n                                {movies.map((movie) => (\n                                    <div className=\"movie-item\" key={movie.id}>\n                                        <h2>{movie.title}</h2>\n                                        <p>{movie.description}</p>\n                                        <button\n                                            onClick={() => {\n                                                setExpandedMovieId((prev) =>\n                                                    prev === movie.id ? null : movie.id\n                                                );\n                                                loadPosts(movie.id);\n                                            }}\n                                        >\n                                            {expandedMovieId === movie.id\n                                                ? 'Hide Details'\n                                                : 'Show Posts'}\n                                        </button>\n                                        {expandedMovieId === movie.id && posts[movie.id] && (\n                                            <div className=\"posts\">\n                                                <h3>Posts:</h3>\n                                                <form\n                                                    onSubmit={(e) => handleCreatePost(movie.id, e)}\n                                                >\n                                                    <input\n                                                        type=\"text\"\n                                                        placeholder=\"Post Title\"\n                                                        value={newPost.title}\n                                                        onChange={(e) =>\n                                                            setNewPost({\n                                                                ...newPost,\n                                                                title: e.target.value,\n                                                            })\n                                                        }\n                                                    />\n                                                    <textarea\n                                                        placeholder=\"Post Body\"\n                                                        value={newPost.body}\n                                                        onChange={(e) =>\n                                                            setNewPost({\n                                                                ...newPost,\n                                                                body: e.target.value,\n                                                            })\n                                                        }\n                                                    ></textarea>\n                                                    <button type=\"submit\">Add Post</button>\n                                                </form>\n                                                {posts[movie.id].map((post) => (\n                                                    <div className=\"post-item\" key={post.id}>\n                                                        <h4>{post.title}</h4>\n                                                        <p>{post.body}</p>\n                                                        <button\n                                                            onClick={() =>\n                                                                loadComments(movie.id, post.id)\n                                                            }\n                                                        >\n                                                            Show Comments\n                                                        </button>\n                                                        {comments[post.id] && (\n                                                            <div className=\"comments\">\n                                                                <h5>Comments:</h5>\n                                                                <form\n                                                                    onSubmit={(e) =>\n                                                                        handleCreateComment(\n                                                                            movie.id,\n                                                                            post.id,\n                                                                            e\n                                                                        )\n                                                                    }\n                                                                >\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        placeholder=\"Comment Content\"\n                                                                        value={newComment.content}\n                                                                        onChange={(e) =>\n                                                                            setNewComment({\n                                                                                ...newComment,\n                                                                                content: e.target.value,\n                                                                            })\n                                                                        }\n                                                                    />\n                                                                    <button type=\"submit\">\n                                                                        Add Comment\n                                                                    </button>\n                                                                </form>\n                                                                {comments[post.id].map((comment) => (\n                                                                    <p key={comment.id}>\n                                                                        {comment.content}\n                                                                    </p>\n                                                                ))}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                    </div>\n                                ))}\n                            </div>\n                        ) : (\n                            <p>Loading movies...</p>\n                        )}\n                    </div>\n                </>\n            )}\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,KAAK,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC;IAAEqB,KAAK,EAAE,EAAE;IAAEI,IAAI,EAAE;EAAG,CAAC,CAAC;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC;IAAE4B,OAAO,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC+B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;EACvE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC;IAAEmC,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC1E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMuC,SAAS,GAAGrC,KAAK,CAACsC,MAAM,CAAC;IAC3BC,OAAO,EAAE,4BAA4B;IACrCC,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUd,KAAK;IAClC;EACJ,CAAC,CAAC;EAEF5B,SAAS,CAAC,MAAM;IACZ;IACA,IAAI4B,KAAK,EAAE;MACPe,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,CAACf,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,SAAS,CAAC;MAC/ClC,SAAS,CAACiC,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,SAAS,GAAG,MAAOC,OAAO,IAAK;IACjC,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,WAAWK,OAAO,QAAQ,CAAC;MAChEnC,QAAQ,CAAEoC,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACD,OAAO,GAAGN,QAAQ,CAACE;MAAK,CAAC,CAAC,CAAC;IAC/D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMK,YAAY,GAAG,MAAAA,CAAOF,OAAO,EAAEG,MAAM,KAAK;IAC5C,IAAI;MACA,MAAMT,QAAQ,GAAG,MAAMN,SAAS,CAACO,GAAG,CAAC,WAAWK,OAAO,UAAUG,MAAM,WAAW,CAAC;MACnFpC,WAAW,CAAEkC,IAAI,KAAM;QACnB,GAAGA,IAAI;QACP,CAACE,MAAM,GAAGT,QAAQ,CAACE;MACvB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAED,MAAMO,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMN,SAAS,CAACmB,IAAI,CAAC,SAAS,EAAEvC,QAAQ,CAAC;MAC1DP,SAAS,CAAEwC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEP,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC7C3B,WAAW,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;IAC/C,CAAC,CAAC,OAAO0B,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,MAAMW,gBAAgB,GAAG,MAAAA,CAAOR,OAAO,EAAEK,CAAC,KAAK;IAC3CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMN,SAAS,CAACmB,IAAI,CAAC,WAAWP,OAAO,QAAQ,EAAE5B,OAAO,CAAC;MAC1EP,QAAQ,CAAEoC,IAAI,KAAM;QAChB,GAAGA,IAAI;QACP,CAACD,OAAO,GAAG,CAAC,IAAIC,IAAI,CAACD,OAAO,CAAC,IAAI,EAAE,CAAC,EAAEN,QAAQ,CAACE,IAAI;MACvD,CAAC,CAAC,CAAC;MACHvB,UAAU,CAAC;QAAEH,KAAK,EAAE,EAAE;QAAEI,IAAI,EAAE;MAAG,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMY,mBAAmB,GAAG,MAAAA,CAAOT,OAAO,EAAEG,MAAM,EAAEE,CAAC,KAAK;IACtDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMZ,QAAQ,GAAG,MAAMN,SAAS,CAACmB,IAAI,CACjC,WAAWP,OAAO,UAAUG,MAAM,WAAW,EAC7C5B,UACJ,CAAC;MACDR,WAAW,CAAEkC,IAAI,KAAM;QACnB,GAAGA,IAAI;QACP,CAACE,MAAM,GAAG,CAAC,IAAIF,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,CAAC,EAAET,QAAQ,CAACE,IAAI;MACrD,CAAC,CAAC,CAAC;MACHpB,aAAa,CAAC;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACnD;EACJ,CAAC;EAED,MAAMa,WAAW,GAAG,MAAOL,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBnB,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAM3C,KAAK,CAACwD,IAAI,CAAC,kCAAkC,EAAEzB,SAAS,CAAC;MAChF,MAAM6B,SAAS,GAAGjB,QAAQ,CAACE,IAAI,CAAClB,KAAK;MACrCC,QAAQ,CAACgC,SAAS,CAAC,CAAC,CAAC;MACrB/B,YAAY,CAACgC,OAAO,CAAC,OAAO,EAAED,SAAS,CAAC;MACxC5B,YAAY,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;;MAE5C;MACAQ,UAAU,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC7C,CAAC,SAAS;MACNV,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB;EACJ,CAAC;EAED,MAAM0B,YAAY,GAAGA,CAAA,KAAM;IACvBlC,QAAQ,CAAC,EAAE,CAAC;IACZC,YAAY,CAACkC,UAAU,CAAC,OAAO,CAAC;IAChCrD,SAAS,CAAC,EAAE,CAAC;IACbI,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZE,WAAW,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACIZ,OAAA;IAAK4D,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChB7D,OAAA,CAACH,MAAM;MAAAiE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACT,CAAC1C,KAAK;IAAA;IACH;IACAvB,OAAA;MAAMkE,QAAQ,EAAEX,WAAY;MAACK,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC/C7D,OAAA;QAAA6D,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdjE,OAAA;QACImE,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE1C,SAAS,CAACE,QAAS;QAC1ByC,QAAQ,EAAGpB,CAAC,IAAKtB,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEE,QAAQ,EAAEqB,CAAC,CAACqB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACFjE,OAAA;QACImE,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE1C,SAAS,CAACG,QAAS;QAC1BwC,QAAQ,EAAGpB,CAAC,IAAKtB,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEG,QAAQ,EAAEoB,CAAC,CAACqB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC,eACFjE,OAAA;QAAQmE,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,GACPlC,SAAS,gBACT/B,OAAA;MAAA6D,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC;IAAA,eAEzBjE,OAAA,CAAAE,SAAA;MAAA2D,QAAA,gBACI7D,OAAA;QAAQwE,OAAO,EAAEd,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CjE,OAAA;QAAK4D,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACpB7D,OAAA;UAAA6D,QAAA,EAAI;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBjE,OAAA;UAAMkE,QAAQ,EAAEjB,iBAAkB;UAACW,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACrD7D,OAAA;YAAA6D,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBjE,OAAA;YACImE,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,aAAa;YACzBC,KAAK,EAAExD,QAAQ,CAACE,KAAM;YACtBuD,QAAQ,EAAGpB,CAAC,IAAKpC,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEE,KAAK,EAAEmC,CAAC,CAACqB,MAAM,CAACF;YAAM,CAAC;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eACFjE,OAAA;YACIoE,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAExD,QAAQ,CAACG,WAAY;YAC5BsD,QAAQ,EAAGpB,CAAC,IACRpC,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAEG,WAAW,EAAEkC,CAAC,CAACqB,MAAM,CAACF;YAAM,CAAC;UAC3D;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACM,CAAC,eACZjE,OAAA;YAAQmE,IAAI,EAAC,QAAQ;YAAAN,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,EAEN5D,MAAM,CAACoE,MAAM,GAAG,CAAC,gBACdzE,OAAA;UAAK4D,SAAS,EAAC,YAAY;UAAAC,QAAA,EACtBxD,MAAM,CAACqE,GAAG,CAAEC,KAAK,iBACd3E,OAAA;YAAK4D,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvB7D,OAAA;cAAA6D,QAAA,EAAKc,KAAK,CAAC5D;YAAK;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBjE,OAAA;cAAA6D,QAAA,EAAIc,KAAK,CAAC3D;YAAW;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC1BjE,OAAA;cACIwE,OAAO,EAAEA,CAAA,KAAM;gBACXhE,kBAAkB,CAAEsC,IAAI,IACpBA,IAAI,KAAK6B,KAAK,CAACC,EAAE,GAAG,IAAI,GAAGD,KAAK,CAACC,EACrC,CAAC;gBACDhC,SAAS,CAAC+B,KAAK,CAACC,EAAE,CAAC;cACvB,CAAE;cAAAf,QAAA,EAEDtD,eAAe,KAAKoE,KAAK,CAACC,EAAE,GACvB,cAAc,GACd;YAAY;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CAAC,EACR1D,eAAe,KAAKoE,KAAK,CAACC,EAAE,IAAInE,KAAK,CAACkE,KAAK,CAACC,EAAE,CAAC,iBAC5C5E,OAAA;cAAK4D,SAAS,EAAC,OAAO;cAAAC,QAAA,gBAClB7D,OAAA;gBAAA6D,QAAA,EAAI;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACfjE,OAAA;gBACIkE,QAAQ,EAAGhB,CAAC,IAAKG,gBAAgB,CAACsB,KAAK,CAACC,EAAE,EAAE1B,CAAC,CAAE;gBAAAW,QAAA,gBAE/C7D,OAAA;kBACImE,IAAI,EAAC,MAAM;kBACXC,WAAW,EAAC,YAAY;kBACxBC,KAAK,EAAEpD,OAAO,CAACF,KAAM;kBACrBuD,QAAQ,EAAGpB,CAAC,IACRhC,UAAU,CAAC;oBACP,GAAGD,OAAO;oBACVF,KAAK,EAAEmC,CAAC,CAACqB,MAAM,CAACF;kBACpB,CAAC;gBACJ;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACFjE,OAAA;kBACIoE,WAAW,EAAC,WAAW;kBACvBC,KAAK,EAAEpD,OAAO,CAACE,IAAK;kBACpBmD,QAAQ,EAAGpB,CAAC,IACRhC,UAAU,CAAC;oBACP,GAAGD,OAAO;oBACVE,IAAI,EAAE+B,CAAC,CAACqB,MAAM,CAACF;kBACnB,CAAC;gBACJ;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACM,CAAC,eACZjE,OAAA;kBAAQmE,IAAI,EAAC,QAAQ;kBAAAN,QAAA,EAAC;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC,EACNxD,KAAK,CAACkE,KAAK,CAACC,EAAE,CAAC,CAACF,GAAG,CAAEtB,IAAI,iBACtBpD,OAAA;gBAAK4D,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACtB7D,OAAA;kBAAA6D,QAAA,EAAKT,IAAI,CAACrC;gBAAK;kBAAA+C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrBjE,OAAA;kBAAA6D,QAAA,EAAIT,IAAI,CAACjC;gBAAI;kBAAA2C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClBjE,OAAA;kBACIwE,OAAO,EAAEA,CAAA,KACLzB,YAAY,CAAC4B,KAAK,CAACC,EAAE,EAAExB,IAAI,CAACwB,EAAE,CACjC;kBAAAf,QAAA,EACJ;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,EACRtD,QAAQ,CAACyC,IAAI,CAACwB,EAAE,CAAC,iBACd5E,OAAA;kBAAK4D,SAAS,EAAC,UAAU;kBAAAC,QAAA,gBACrB7D,OAAA;oBAAA6D,QAAA,EAAI;kBAAS;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC,eAClBjE,OAAA;oBACIkE,QAAQ,EAAGhB,CAAC,IACRI,mBAAmB,CACfqB,KAAK,CAACC,EAAE,EACRxB,IAAI,CAACwB,EAAE,EACP1B,CACJ,CACH;oBAAAW,QAAA,gBAED7D,OAAA;sBACImE,IAAI,EAAC,MAAM;sBACXC,WAAW,EAAC,iBAAiB;sBAC7BC,KAAK,EAAEjD,UAAU,CAACE,OAAQ;sBAC1BgD,QAAQ,EAAGpB,CAAC,IACR7B,aAAa,CAAC;wBACV,GAAGD,UAAU;wBACbE,OAAO,EAAE4B,CAAC,CAACqB,MAAM,CAACF;sBACtB,CAAC;oBACJ;sBAAAP,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC,eACFjE,OAAA;sBAAQmE,IAAI,EAAC,QAAQ;sBAAAN,QAAA,EAAC;oBAEtB;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC,EACNtD,QAAQ,CAACyC,IAAI,CAACwB,EAAE,CAAC,CAACF,GAAG,CAAEG,OAAO,iBAC3B7E,OAAA;oBAAA6D,QAAA,EACKgB,OAAO,CAACvD;kBAAO,GADZuD,OAAO,CAACD,EAAE;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEf,CACN,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CACR;cAAA,GA3C2Bb,IAAI,CAACwB,EAAE;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA4ClC,CACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACR;UAAA,GA5F4BU,KAAK,CAACC,EAAE;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6FpC,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,gBAENjE,OAAA;UAAA6D,QAAA,EAAG;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,eACR,CACL,eACDjE,OAAA,CAACF,MAAM;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAC7D,EAAA,CAxRID,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AA0RT,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}