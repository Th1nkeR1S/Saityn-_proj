{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'https://localhost:5133/api',\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n    'Content-Type': 'application/json'\n  }\n});\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const navigate = useNavigate();\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n  const movieTitleRef = useRef(null);\n  const movieDescriptionRef = useRef(null);\n  const postTitleRef = useRef(null);\n  const postBodyRef = useRef(null);\n  const commentContentRef = useRef(null);\n\n  // Extract userId from the token\n  const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axiosInstance.get('/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    if (isLoggedIn) {\n      loadMovies();\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n  const MovieList = () => {\n    const loadPosts = async movieId => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    const loadComments = async (movieId, postId) => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    const handleCreateMovie = async e => {\n      e.preventDefault();\n      try {\n        const newMovieData = {\n          title: movieTitleRef.current.value,\n          description: movieDescriptionRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post('/movies', newMovieData);\n        setMovies(prev => [...prev, response.data]);\n        movieTitleRef.current.value = '';\n        movieDescriptionRef.current.value = '';\n        setModalVisible(false); // Close modal after submitting\n      } catch (error) {\n        console.error('Error creating movie:', error);\n      }\n    };\n    const handleEditMovie = async (movieId, e) => {\n      e.preventDefault();\n      const updatedMovieData = {\n        title: movieTitleRef.current.value,\n        description: movieDescriptionRef.current.value\n      };\n      try {\n        const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n        setMovies(prev => prev.map(movie => movie.id === movieId ? response.data : movie));\n        setExpandedMovieId(null); // Close edit mode\n      } catch (error) {\n        console.error('Error editing movie:', error);\n      }\n    };\n    const handleDeleteMovie = async movieId => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}`);\n        setMovies(prev => prev.filter(movie => movie.id !== movieId));\n      } catch (error) {\n        console.error('Error deleting movie:', error);\n      }\n    };\n    const handleCreatePost = async (movieId, e) => {\n      e.preventDefault();\n      const newPostData = {\n        title: postTitleRef.current.value,\n        body: postBodyRef.current.value,\n        userId: userID\n      };\n      try {\n        const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: [...(prev[movieId] || []), response.data]\n        }));\n        postTitleRef.current.value = '';\n        postBodyRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating post:', error);\n      }\n    };\n    const handleDeletePost = async (movieId, postId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: prev[movieId].filter(post => post.id !== postId)\n        }));\n      } catch (error) {\n        console.error('Error deleting post:', error);\n      }\n    };\n    const handleCreateComment = async (movieId, postId, e) => {\n      e.preventDefault();\n      try {\n        const newCommentData = {\n          content: commentContentRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post(`/movies/${movieId}/posts/${postId}/comments`, newCommentData);\n        setComments(prev => ({\n          ...prev,\n          [postId]: [...(prev[postId] || []), response.data]\n        }));\n        commentContentRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating comment:', error);\n      }\n    };\n    const handleDeleteComment = async (movieId, postId, commentId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: prev[postId].filter(comment => comment.id !== commentId)\n        }));\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n      }\n    };\n    const handleEditClick = movieId => {\n      setExpandedMovieId(movieId); // Open the edit form for the selected movie\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalVisible(true),\n          className: \"create-movie-btn\",\n          children: \"Create New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateMovie,\n            className: \"movie-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: movieTitleRef,\n              placeholder: \"Movie Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: movieDescriptionRef,\n              placeholder: \"Movie Description\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setModalVisible(false),\n              className: \"close-modal-btn\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteMovie(movie.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditClick(movie.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n                loadPosts(movie.id);\n              },\n              children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Posts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleCreatePost(movie.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: postTitleRef,\n                  placeholder: \"Post Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  ref: postBodyRef,\n                  placeholder: \"Post Body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 45\n              }, this), posts[movie.id].length > 0 ? posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeletePost(movie.id, post.id),\n                  children: \"Delete Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadComments(movie.id, post.id),\n                  children: \"Show Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 57\n                }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      ref: commentContentRef,\n                      placeholder: \"Comment Content\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Add Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 9\n                  }, this), comments[post.id].length > 0 ? comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"comment-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: comment.content\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 21\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeleteComment(movie.id, post.id, comment.id),\n                      children: \"Delete Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 21\n                    }, this)]\n                  }, comment.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 17\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No comments available.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 5\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 53\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No posts available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 41\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"Jvi55E6jTEd+pAl93rZcbzTBaZE=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","jwtDecode","Header","Footer","Modal","Route","Routes","useNavigate","Login","jsxDEV","_jsxDEV","axiosInstance","create","baseURL","headers","localStorage","getItem","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","navigate","isLoggedIn","movieTitleRef","movieDescriptionRef","postTitleRef","postBodyRef","commentContentRef","userID","sub","loadMovies","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","MovieList","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","newMovieData","title","current","value","description","userId","post","handleEditMovie","updatedMovieData","put","map","movie","id","handleDeleteMovie","delete","filter","handleCreatePost","newPostData","body","handleDeletePost","handleCreateComment","newCommentData","content","handleDeleteComment","commentId","comment","handleEditClick","className","children","onClick","onSubmit","type","ref","placeholder","required","length","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; \nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://localhost:5133/api',\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json',\n    }\n});\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n\n    const navigate = useNavigate();\n    const isLoggedIn = localStorage.getItem('accessToken') !== null;\n\n    const movieTitleRef = useRef(null);\n    const movieDescriptionRef = useRef(null);\n    const postTitleRef = useRef(null);\n    const postBodyRef = useRef(null);\n    const commentContentRef = useRef(null);\n\n    // Extract userId from the token\n    const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n\n    useEffect(() => {\n        const loadMovies = async () => {\n            try {\n                const response = await axiosInstance.get('/movies');\n                setMovies(response.data);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        if (isLoggedIn) {\n            loadMovies();\n        }\n    }, [isLoggedIn]);\n\n    if (!isLoggedIn) {\n        return <Login />;\n    }\n\n    const handleLogout = () => {\n        localStorage.removeItem('accessToken');\n        navigate('/login');\n    };\n\n    const MovieList = () => {\n        const loadPosts = async (movieId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n                setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        const loadComments = async (movieId, postId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: response.data,\n                }));\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        };\n\n        const handleCreateMovie = async (e) => {\n            e.preventDefault();\n            try {\n                const newMovieData = {\n                    title: movieTitleRef.current.value,\n                    description: movieDescriptionRef.current.value,\n                    userId: userID, \n                };\n                const response = await axiosInstance.post('/movies', newMovieData);\n                setMovies((prev) => [...prev, response.data]);\n                movieTitleRef.current.value = '';\n                movieDescriptionRef.current.value = '';\n                setModalVisible(false); // Close modal after submitting\n            } catch (error) {\n                console.error('Error creating movie:', error);\n            }\n        };\n\n        const handleEditMovie = async (movieId, e) => {\n          e.preventDefault();\n      \n          const updatedMovieData = {\n              title: movieTitleRef.current.value,\n              description: movieDescriptionRef.current.value,\n          };\n      \n          try {\n              const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n              setMovies((prev) =>\n                  prev.map((movie) => (movie.id === movieId ? response.data : movie))\n              );\n              setExpandedMovieId(null); // Close edit mode\n          } catch (error) {\n              console.error('Error editing movie:', error);\n          }\n      };\n\n        const handleDeleteMovie = async (movieId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}`);\n              setMovies((prev) => prev.filter((movie) => movie.id !== movieId));\n          } catch (error) {\n              console.error('Error deleting movie:', error);\n          }\n      };\n\n        const handleCreatePost = async (movieId, e) => {\n            e.preventDefault();\n\n            const newPostData = {\n                title: postTitleRef.current.value,\n                body: postBodyRef.current.value,\n                userId: userID,\n            };\n\n            try {\n                const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n                setPosts((prev) => ({\n                    ...prev,\n                    [movieId]: [...(prev[movieId] || []), response.data],\n                }));\n\n                postTitleRef.current.value = '';\n                postBodyRef.current.value = '';\n            } catch (error) {\n                console.error('Error creating post:', error);\n            }\n        };\n\n        const handleDeletePost = async (movieId, postId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n              setPosts((prev) => ({\n                  ...prev,\n                  [movieId]: prev[movieId].filter((post) => post.id !== postId),\n              }));\n          } catch (error) {\n              console.error('Error deleting post:', error);\n          }\n      };\n\n\n        const handleCreateComment = async (movieId, postId, e) => {\n            e.preventDefault();\n            try {\n                const newCommentData = {\n                    content: commentContentRef.current.value,\n                    userId: userID,\n                };\n                const response = await axiosInstance.post(\n                    `/movies/${movieId}/posts/${postId}/comments`,\n                    newCommentData\n                );\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: [...(prev[postId] || []), response.data],\n                }));\n                commentContentRef.current.value = '';\n            } catch (error) {\n                console.error('Error creating comment:', error);\n            }\n        };\n\n        const handleDeleteComment = async (movieId, postId, commentId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n              setComments((prev) => ({\n                  ...prev,\n                  [postId]: prev[postId].filter((comment) => comment.id !== commentId),\n              }));\n          } catch (error) {\n              console.error('Error deleting comment:', error);\n          }\n      };\n\n      const handleEditClick = (movieId) => {\n        setExpandedMovieId(movieId); // Open the edit form for the selected movie\n    };\n\n\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"content\">\n                    <h1>Movies List</h1>\n\n                    <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n\n                    {/* Button to open the modal */}\n                    <button onClick={() => setModalVisible(true)} className=\"create-movie-btn\">\n                        Create New Movie\n                    </button>\n\n                    {/* Modal for creating a movie */}\n                    {modalVisible && (\n                        <Modal>\n                            <h2>Create New Movie</h2>\n                            <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                                <input\n                                    type=\"text\"\n                                    ref={movieTitleRef}\n                                    placeholder=\"Movie Title\"\n                                    required\n                                />\n                                <textarea\n                                    ref={movieDescriptionRef}\n                                    placeholder=\"Movie Description\"\n                                    required\n                                ></textarea>\n                                <button type=\"submit\">Add Movie</button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setModalVisible(false)}\n                                    className=\"close-modal-btn\"\n                                >\n                                    Close\n                                </button>\n                            </form>\n                        </Modal>\n                    )}\n\n                    {movies.length > 0 ? (\n                        <div className=\"movie-list\">\n                            {movies.map((movie) => (\n                                <div className=\"movie-item\" key={movie.id}>\n                                    <h2>{movie.title}</h2>\n                                    <p>{movie.description}</p>\n                                    <button onClick={() => handleDeleteMovie(movie.id)}>Delete</button>\n                                    <button onClick={() => handleEditClick(movie.id)}>Edit</button>\n                                    <button\n                                        onClick={() => {\n                                            setExpandedMovieId((prev) =>\n                                                prev === movie.id ? null : movie.id\n                                            );\n                                            loadPosts(movie.id);\n                                        }}\n                                    >\n                                        {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                    </button>\n                                    {expandedMovieId === movie.id && posts[movie.id] && (\n                                        <div className=\"posts\">\n                                            <h3>Posts:</h3>\n                                            <form onSubmit={(e) => handleCreatePost(movie.id, e)}>\n                                                <input\n                                                    type=\"text\"\n                                                    ref={postTitleRef}\n                                                    placeholder=\"Post Title\"\n                                                />\n                                                <textarea\n                                                    ref={postBodyRef}\n                                                    placeholder=\"Post Body\"\n                                                ></textarea>\n                                                <button type=\"submit\">Add Post</button>\n                                            </form>\n                                            {posts[movie.id].length > 0 ? (\n                                                posts[movie.id].map((post) => (\n                                                    <div className=\"post-item\" key={post.id}>\n                                                        <h4>{post.title}</h4>\n                                                        <p>{post.body}</p>\n                                                        <button onClick={() => handleDeletePost(movie.id, post.id)}>Delete Post</button>\n                                                        <button\n                                                            onClick={() => loadComments(movie.id, post.id)}\n                                                        >\n                                                            Show Comments\n                                                        </button>\n                                                        {comments[post.id] && (\n    <div className=\"comments\">\n        <h5>Comments:</h5>\n        <form\n            onSubmit={(e) => handleCreateComment(movie.id, post.id, e)}\n        >\n            <input\n                type=\"text\"\n                ref={commentContentRef}\n                placeholder=\"Comment Content\"\n            />\n            <button type=\"submit\">Add Comment</button>\n        </form>\n        {comments[post.id].length > 0 ? (\n            comments[post.id].map((comment) => (\n                <div key={comment.id} className=\"comment-item\">\n                    <p>{comment.content}</p>\n                    <button\n                        onClick={() =>\n                            handleDeleteComment(movie.id, post.id, comment.id)\n                        }\n                    >\n                        Delete Comment\n                    </button>\n                </div>\n            ))\n        ) : (\n            <p>No comments available.</p>\n        )}\n    </div>\n)}\n                                                    </div>\n                                                ))\n                                            ) : (\n                                                <p>No posts available.</p>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p>Loading movies...</p>\n                    )}\n                </div>\n                <Footer />\n            </div>\n        );\n    };\n\n    return (\n        <Routes>\n            <Route path=\"/\" element={<MovieList />} />\n            <Route path=\"/login\" element={<Login />} />\n        </Routes>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}