{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport Login from './Pages/Login'; // Import the Login component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: ''\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    content: ''\n  });\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axios.get('https://localhost:5133/api/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    if (isLoggedIn) {\n      loadMovies();\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  const MovieList = () => {\n    const loadPosts = async movieId => {\n      try {\n        const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    const loadComments = async (movieId, postId) => {\n      try {\n        const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    const handleCreateMovie = async e => {\n      e.preventDefault();\n      try {\n        const response = await axios.post('https://localhost:5133/api/movies', newMovie);\n        setMovies(prev => [...prev, response.data]);\n        setNewMovie({\n          title: '',\n          description: ''\n        });\n      } catch (error) {\n        console.error('Error creating movie:', error);\n      }\n    };\n    const handleCreatePost = async (movieId, e) => {\n      e.preventDefault();\n      try {\n        const response = await axios.post(`https://localhost:5133/api/movies/${movieId}/posts`, newPost);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: [...(prev[movieId] || []), response.data]\n        }));\n        setNewPost({\n          title: '',\n          body: ''\n        });\n      } catch (error) {\n        console.error('Error creating post:', error);\n      }\n    };\n    const handleCreateComment = async (movieId, postId, e) => {\n      e.preventDefault();\n      try {\n        const response = await axios.post(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`, newComment);\n        setComments(prev => ({\n          ...prev,\n          [postId]: [...(prev[postId] || []), response.data]\n        }));\n        setNewComment({\n          content: ''\n        });\n      } catch (error) {\n        console.error('Error creating comment:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleCreateMovie,\n          className: \"movie-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Movie Title\",\n            value: newMovie.title,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Movie Description\",\n            value: newMovie.description,\n            onChange: e => setNewMovie({\n              ...newMovie,\n              description: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n                loadPosts(movie.id);\n              },\n              children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Posts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleCreatePost(movie.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Post Title\",\n                  value: newPost.title,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    title: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"Post Body\",\n                  value: newPost.body,\n                  onChange: e => setNewPost({\n                    ...newPost,\n                    body: e.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 45\n              }, this), posts[movie.id].length > 0 ? posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadComments(movie.id, post.id),\n                  children: \"Show Comments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 57\n                }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"comments\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Comments:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 65\n                  }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                    onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      placeholder: \"Comment Content\",\n                      value: newComment.content,\n                      onChange: e => setNewComment({\n                        ...newComment,\n                        content: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      children: \"Add Comment\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 69\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 65\n                  }, this), comments[post.id].length > 0 ? comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: comment.content\n                  }, comment.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 73\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"No comments available.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 69\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 61\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 53\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No posts available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 41\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"lWZxAcBSHbiDmwIV1928kpeKNLo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","Header","Footer","Modal","Login","jsxDEV","_jsxDEV","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","newMovie","setNewMovie","title","description","newPost","setNewPost","body","newComment","setNewComment","content","isLoggedIn","localStorage","getItem","loadMovies","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","MovieList","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","post","handleCreatePost","handleCreateComment","className","children","onSubmit","type","placeholder","value","onChange","target","length","map","movie","onClick","id","comment","Routes","Route","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport Login from './Pages/Login'; // Import the Login component\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n    const [newMovie, setNewMovie] = useState({ title: '', description: '' });\n    const [newPost, setNewPost] = useState({ title: '', body: '' });\n    const [newComment, setNewComment] = useState({ content: '' });\n\n    const isLoggedIn = localStorage.getItem('accessToken') !== null;\n\n    useEffect(() => {\n        const loadMovies = async () => {\n            try {\n                const response = await axios.get('https://localhost:5133/api/movies');\n                setMovies(response.data);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        if (isLoggedIn) {\n            loadMovies();\n        }\n    }, [isLoggedIn]);\n\n    if (!isLoggedIn) {\n        return <Login />;\n    }\n\n    const MovieList = () => {\n        const loadPosts = async (movieId) => {\n            try {\n                const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`);\n                setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        const loadComments = async (movieId, postId) => {\n            try {\n                const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`);\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: response.data,\n                }));\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        };\n\n        const handleCreateMovie = async (e) => {\n            e.preventDefault();\n            try {\n                const response = await axios.post('https://localhost:5133/api/movies', newMovie);\n                setMovies((prev) => [...prev, response.data]);\n                setNewMovie({ title: '', description: '' });\n            } catch (error) {\n                console.error('Error creating movie:', error);\n            }\n        };\n\n        const handleCreatePost = async (movieId, e) => {\n            e.preventDefault();\n            try {\n                const response = await axios.post(`https://localhost:5133/api/movies/${movieId}/posts`, newPost);\n                setPosts((prev) => ({\n                    ...prev,\n                    [movieId]: [...(prev[movieId] || []), response.data],\n                }));\n                setNewPost({ title: '', body: '' });\n            } catch (error) {\n                console.error('Error creating post:', error);\n            }\n        };\n\n        const handleCreateComment = async (movieId, postId, e) => {\n            e.preventDefault();\n            try {\n                const response = await axios.post(\n                    `https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`,\n                    newComment\n                );\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: [...(prev[postId] || []), response.data],\n                }));\n                setNewComment({ content: '' });\n            } catch (error) {\n                console.error('Error creating comment:', error);\n            }\n        };\n\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"content\">\n                    <h1>Movies List</h1>\n\n                    <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                        <h2>Create New Movie</h2>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Movie Title\"\n                            value={newMovie.title}\n                            onChange={(e) => setNewMovie({ ...newMovie, title: e.target.value })}\n                        />\n                        <textarea\n                            placeholder=\"Movie Description\"\n                            value={newMovie.description}\n                            onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })}\n                        ></textarea>\n                        <button type=\"submit\">Add Movie</button>\n                    </form>\n\n                    {movies.length > 0 ? (\n                        <div className=\"movie-list\">\n                            {movies.map((movie) => (\n                                <div className=\"movie-item\" key={movie.id}>\n                                    <h2>{movie.title}</h2>\n                                    <p>{movie.description}</p>\n                                    <button\n                                        onClick={() => {\n                                            setExpandedMovieId((prev) =>\n                                                prev === movie.id ? null : movie.id\n                                            );\n                                            loadPosts(movie.id);\n                                        }}\n                                    >\n                                        {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                    </button>\n                                    {expandedMovieId === movie.id && posts[movie.id] && (\n                                        <div className=\"posts\">\n                                            <h3>Posts:</h3>\n                                            <form onSubmit={(e) => handleCreatePost(movie.id, e)}>\n                                                <input\n                                                    type=\"text\"\n                                                    placeholder=\"Post Title\"\n                                                    value={newPost.title}\n                                                    onChange={(e) =>\n                                                        setNewPost({ ...newPost, title: e.target.value })\n                                                    }\n                                                />\n                                                <textarea\n                                                    placeholder=\"Post Body\"\n                                                    value={newPost.body}\n                                                    onChange={(e) =>\n                                                        setNewPost({ ...newPost, body: e.target.value })\n                                                    }\n                                                ></textarea>\n                                                <button type=\"submit\">Add Post</button>\n                                            </form>\n                                            {posts[movie.id].length > 0 ? (\n                                                posts[movie.id].map((post) => (\n                                                    <div className=\"post-item\" key={post.id}>\n                                                        <h4>{post.title}</h4>\n                                                        <p>{post.body}</p>\n                                                        <button\n                                                            onClick={() => loadComments(movie.id, post.id)}\n                                                        >\n                                                            Show Comments\n                                                        </button>\n                                                        {comments[post.id] && (\n                                                            <div className=\"comments\">\n                                                                <h5>Comments:</h5>\n                                                                <form\n                                                                    onSubmit={(e) =>\n                                                                        handleCreateComment(movie.id, post.id, e)\n                                                                    }\n                                                                >\n                                                                    <input\n                                                                        type=\"text\"\n                                                                        placeholder=\"Comment Content\"\n                                                                        value={newComment.content}\n                                                                        onChange={(e) =>\n                                                                            setNewComment({ ...newComment, content: e.target.value })\n                                                                        }\n                                                                    />\n                                                                    <button type=\"submit\">Add Comment</button>\n                                                                </form>\n                                                                {comments[post.id].length > 0 ? (\n                                                                    comments[post.id].map((comment) => (\n                                                                        <p key={comment.id}>{comment.content}</p>\n                                                                    ))\n                                                                ) : (\n                                                                    <p>No comments available.</p>\n                                                                )}\n                                                            </div>\n                                                        )}\n                                                    </div>\n                                                ))\n                                            ) : (\n                                                <p>No posts available.</p>\n                                            )}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p>Loading movies...</p>\n                    )}\n                </div>\n                {modalVisible && <Modal />}\n                <Footer />\n            </div>\n        );\n    };\n\n    return (\n      <Routes>\n      <Route path=\"/\" element={<MovieList />} />\n      <Route path=\"/login\" element={<Login />} />\n    </Routes>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}