{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // Corrected to 'jwt-decode' import\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axiosInstance = axios.create({\n  baseURL: 'https://localhost:5133/api',\n  headers: {\n    'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n    'Content-Type': 'application/json'\n  }\n});\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [expandedPostId, setExpandedPostId] = useState(null);\n  const [expandedCommentId, setExpandedCommentId] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const navigate = useNavigate();\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n  const movieTitleRef = useRef(null);\n  const movieDescriptionRef = useRef(null);\n  const postTitleRef = useRef(null);\n  const postBodyRef = useRef(null);\n  const commentContentRef = useRef(null);\n\n  // Extract userId from the token\n  const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axiosInstance.get('/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    if (isLoggedIn) {\n      loadMovies();\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this); // Redirect to Login if not logged in\n  }\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n\n  // MovieList component\n  const MovieList = () => {\n    const loadPosts = async movieId => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    const loadComments = async (movieId, postId) => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    const handleCreateMovie = async e => {\n      e.preventDefault();\n      try {\n        const newMovieData = {\n          title: movieTitleRef.current.value,\n          description: movieDescriptionRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post('/movies', newMovieData);\n        setMovies(prev => [...prev, response.data]);\n        movieTitleRef.current.value = '';\n        movieDescriptionRef.current.value = '';\n        setModalVisible(false); // Close modal after submitting\n      } catch (error) {\n        console.error('Error creating movie:', error);\n      }\n    };\n    const handleEditMovie = async (movieId, e) => {\n      e.preventDefault();\n      const updatedMovieData = {\n        title: movieTitleRef.current.value,\n        description: movieDescriptionRef.current.value\n      };\n      try {\n        const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n        setMovies(prev => prev.map(movie => movie.id === movieId ? response.data : movie));\n        setExpandedMovieId(null); // Close edit mode\n      } catch (error) {\n        console.error('Error editing movie:', error);\n      }\n    };\n    const handleDeleteMovie = async movieId => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}`);\n        setMovies(prev => prev.filter(movie => movie.id !== movieId));\n      } catch (error) {\n        console.error('Error deleting movie:', error);\n      }\n    };\n    const handleCreatePost = async (movieId, e) => {\n      e.preventDefault();\n      const newPostData = {\n        title: postTitleRef.current.value,\n        body: postBodyRef.current.value,\n        userId: userID\n      };\n      try {\n        const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: [...(prev[movieId] || []), response.data]\n        }));\n        postTitleRef.current.value = '';\n        postBodyRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating post:', error);\n      }\n    };\n    const handleDeletePost = async (movieId, postId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: prev[movieId].filter(post => post.id !== postId)\n        }));\n      } catch (error) {\n        console.error('Error deleting post:', error);\n      }\n    };\n    const handleCreateComment = async (movieId, postId, e) => {\n      e.preventDefault();\n      try {\n        const newCommentData = {\n          content: commentContentRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post(`/movies/${movieId}/posts/${postId}/comments`, newCommentData);\n        setComments(prev => ({\n          ...prev,\n          [postId]: [...(prev[postId] || []), response.data]\n        }));\n        commentContentRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating comment:', error);\n      }\n    };\n    const handleDeleteComment = async (movieId, postId, commentId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: prev[postId].filter(comment => comment.id !== commentId)\n        }));\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalVisible(true),\n          className: \"create-movie-btn\",\n          children: \"Create New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateMovie,\n            className: \"movie-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: movieTitleRef,\n              placeholder: \"Movie Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: movieDescriptionRef,\n              placeholder: \"Movie Description\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setModalVisible(false),\n              className: \"close-modal-btn\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => {\n            var _posts$movie$id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: movie.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteMovie(movie.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setExpandedMovieId(movie.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this), expandedMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleEditMovie(movie.id, e),\n                className: \"edit-movie-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: movieTitleRef,\n                  defaultValue: movie.title,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  ref: movieDescriptionRef,\n                  defaultValue: movie.description,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Update Movie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Posts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => loadPosts(movie.id),\n                  children: \"Load Posts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this), (_posts$movie$id = posts[movie.id]) === null || _posts$movie$id === void 0 ? void 0 : _posts$movie$id.map(post => {\n                  var _comments$post$id;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: post.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: post.body\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleDeletePost(movie.id, post.id),\n                      children: \"Delete Post\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 269,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => loadComments(movie.id, post.id),\n                        children: \"Load Comments\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 53\n                      }, this), (_comments$post$id = comments[post.id]) === null || _comments$post$id === void 0 ? void 0 : _comments$post$id.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                          children: comment.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 274,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          onClick: () => handleDeleteComment(movie.id, post.id, comment.id),\n                          children: \"Delete Comment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 275,\n                          columnNumber: 61\n                        }, this)]\n                      }, comment.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 273,\n                        columnNumber: 57\n                      }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n                        onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                          ref: commentContentRef,\n                          placeholder: \"Add Comment\",\n                          required: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 279,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                          type: \"submit\",\n                          children: \"Add Comment\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 280,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 278,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 270,\n                      columnNumber: 49\n                    }, this)]\n                  }, post.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => handleCreatePost(movie.id, e),\n                  className: \"create-post-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ref: postTitleRef,\n                    placeholder: \"Post Title\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    ref: postBodyRef,\n                    placeholder: \"Post Body\",\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Add Post\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: isLoggedIn ? /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 51\n      }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/register\",\n      element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"68eNcklmjaqP5Anh8qkjIfuOO+g=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","jwtDecode","Header","Footer","Modal","Route","Routes","useNavigate","Login","Register","jsxDEV","_jsxDEV","axiosInstance","create","baseURL","headers","localStorage","getItem","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","expandedPostId","setExpandedPostId","expandedCommentId","setExpandedCommentId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","navigate","isLoggedIn","movieTitleRef","movieDescriptionRef","postTitleRef","postBodyRef","commentContentRef","userID","sub","loadMovies","response","get","data","error","console","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","MovieList","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","newMovieData","title","current","value","description","userId","post","handleEditMovie","updatedMovieData","put","map","movie","id","handleDeleteMovie","delete","filter","handleCreatePost","newPostData","body","handleDeletePost","handleCreateComment","newCommentData","content","handleDeleteComment","commentId","comment","className","children","onClick","onSubmit","type","ref","placeholder","required","length","_posts$movie$id","defaultValue","_comments$post$id","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';   // Corrected to 'jwt-decode' import\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Modal from './Components/Modal';\nimport { Route, Routes, useNavigate } from 'react-router-dom';\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://localhost:5133/api',\n    headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n        'Content-Type': 'application/json',\n    }\n});\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [expandedPostId, setExpandedPostId] = useState(null);\n    const [expandedCommentId, setExpandedCommentId] = useState(null);\n    const [modalVisible, setModalVisible] = useState(false);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n\n    const navigate = useNavigate();\n    const isLoggedIn = localStorage.getItem('accessToken') !== null;\n\n    const movieTitleRef = useRef(null);\n    const movieDescriptionRef = useRef(null);\n    const postTitleRef = useRef(null);\n    const postBodyRef = useRef(null);\n    const commentContentRef = useRef(null);\n\n    // Extract userId from the token\n    const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n\n    useEffect(() => {\n        const loadMovies = async () => {\n            try {\n                const response = await axiosInstance.get('/movies');\n                setMovies(response.data);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        };\n\n        if (isLoggedIn) {\n            loadMovies();\n        }\n    }, [isLoggedIn]);\n\n    if (!isLoggedIn) {\n        return <Login />;  // Redirect to Login if not logged in\n    }\n\n    const handleLogout = () => {\n        localStorage.removeItem('accessToken');\n        navigate('/login');\n    };\n\n    // MovieList component\n    const MovieList = () => {\n        const loadPosts = async (movieId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n                setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n            }\n        };\n\n        const loadComments = async (movieId, postId) => {\n            try {\n                const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: response.data,\n                }));\n            } catch (error) {\n                console.error('Error fetching comments:', error);\n            }\n        };\n\n        const handleCreateMovie = async (e) => {\n            e.preventDefault();\n            try {\n                const newMovieData = {\n                    title: movieTitleRef.current.value,\n                    description: movieDescriptionRef.current.value,\n                    userId: userID, \n                };\n                const response = await axiosInstance.post('/movies', newMovieData);\n                setMovies((prev) => [...prev, response.data]);\n                movieTitleRef.current.value = '';\n                movieDescriptionRef.current.value = '';\n                setModalVisible(false); // Close modal after submitting\n            } catch (error) {\n                console.error('Error creating movie:', error);\n            }\n        };\n\n        const handleEditMovie = async (movieId, e) => {\n            e.preventDefault();\n            const updatedMovieData = {\n                title: movieTitleRef.current.value,\n                description: movieDescriptionRef.current.value,\n            };\n            try {\n                const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n                setMovies((prev) =>\n                    prev.map((movie) => (movie.id === movieId ? response.data : movie))\n                );\n                setExpandedMovieId(null); // Close edit mode\n            } catch (error) {\n                console.error('Error editing movie:', error);\n            }\n        };\n\n        const handleDeleteMovie = async (movieId) => {\n            try {\n                await axiosInstance.delete(`/movies/${movieId}`);\n                setMovies((prev) => prev.filter((movie) => movie.id !== movieId));\n            } catch (error) {\n                console.error('Error deleting movie:', error);\n            }\n        };\n\n        const handleCreatePost = async (movieId, e) => {\n            e.preventDefault();\n            const newPostData = {\n                title: postTitleRef.current.value,\n                body: postBodyRef.current.value,\n                userId: userID,\n            };\n\n            try {\n                const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n                setPosts((prev) => ({\n                    ...prev,\n                    [movieId]: [...(prev[movieId] || []), response.data],\n                }));\n\n                postTitleRef.current.value = '';\n                postBodyRef.current.value = '';\n            } catch (error) {\n                console.error('Error creating post:', error);\n            }\n        };\n\n        const handleDeletePost = async (movieId, postId) => {\n            try {\n                await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n                setPosts((prev) => ({\n                    ...prev,\n                    [movieId]: prev[movieId].filter((post) => post.id !== postId),\n                }));\n            } catch (error) {\n                console.error('Error deleting post:', error);\n            }\n        };\n\n        const handleCreateComment = async (movieId, postId, e) => {\n            e.preventDefault();\n            try {\n                const newCommentData = {\n                    content: commentContentRef.current.value,\n                    userId: userID,\n                };\n                const response = await axiosInstance.post(\n                    `/movies/${movieId}/posts/${postId}/comments`,\n                    newCommentData\n                );\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: [...(prev[postId] || []), response.data],\n                }));\n                commentContentRef.current.value = '';\n            } catch (error) {\n                console.error('Error creating comment:', error);\n            }\n        };\n\n        const handleDeleteComment = async (movieId, postId, commentId) => {\n            try {\n                await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n                setComments((prev) => ({\n                    ...prev,\n                    [postId]: prev[postId].filter((comment) => comment.id !== commentId),\n                }));\n            } catch (error) {\n                console.error('Error deleting comment:', error);\n            }\n        };\n\n        return (\n            <div className=\"App\">\n                <Header />\n                <div className=\"content\">\n                    <h1>Movies List</h1>\n                    <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n\n                    <button onClick={() => setModalVisible(true)} className=\"create-movie-btn\">\n                        Create New Movie\n                    </button>\n\n                    {/* Modal for creating a movie */}\n                    {modalVisible && (\n                        <Modal>\n                            <h2>Create New Movie</h2>\n                            <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                                <input\n                                    type=\"text\"\n                                    ref={movieTitleRef}\n                                    placeholder=\"Movie Title\"\n                                    required\n                                />\n                                <textarea\n                                    ref={movieDescriptionRef}\n                                    placeholder=\"Movie Description\"\n                                    required\n                                ></textarea>\n                                <button type=\"submit\">Add Movie</button>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => setModalVisible(false)}\n                                    className=\"close-modal-btn\"\n                                >\n                                    Close\n                                </button>\n                            </form>\n                        </Modal>\n                    )}\n\n                    {movies.length > 0 ? (\n                        <div className=\"movie-list\">\n                            {movies.map((movie) => (\n                                <div className=\"movie-item\" key={movie.id}>\n                                    <h2>{movie.title}</h2>\n                                    <p>{movie.description}</p>\n                                    <button onClick={() => handleDeleteMovie(movie.id)}>Delete</button>\n                                    <button onClick={() => setExpandedMovieId(movie.id)}>Edit</button>\n                                    {expandedMovieId === movie.id && (\n                                        <form onSubmit={(e) => handleEditMovie(movie.id, e)} className=\"edit-movie-form\">\n                                            <input\n                                                type=\"text\"\n                                                ref={movieTitleRef}\n                                                defaultValue={movie.title}\n                                                required\n                                            />\n                                            <textarea\n                                                ref={movieDescriptionRef}\n                                                defaultValue={movie.description}\n                                                required\n                                            ></textarea>\n                                            <button type=\"submit\">Update Movie</button>\n                                        </form>\n                                    )}\n                                    <div>\n                                        <h3>Posts</h3>\n                                        <button onClick={() => loadPosts(movie.id)}>Load Posts</button>\n                                        {posts[movie.id]?.map((post) => (\n                                            <div key={post.id}>\n                                                <h4>{post.title}</h4>\n                                                <p>{post.body}</p>\n                                                <button onClick={() => handleDeletePost(movie.id, post.id)}>Delete Post</button>\n                                                <div>\n                                                    <button onClick={() => loadComments(movie.id, post.id)}>Load Comments</button>\n                                                    {comments[post.id]?.map((comment) => (\n                                                        <div key={comment.id}>\n                                                            <p>{comment.content}</p>\n                                                            <button onClick={() => handleDeleteComment(movie.id, post.id, comment.id)}>Delete Comment</button>\n                                                        </div>\n                                                    ))}\n                                                    <form onSubmit={(e) => handleCreateComment(movie.id, post.id, e)}>\n                                                        <textarea ref={commentContentRef} placeholder=\"Add Comment\" required></textarea>\n                                                        <button type=\"submit\">Add Comment</button>\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        ))}\n                                        <form onSubmit={(e) => handleCreatePost(movie.id, e)} className=\"create-post-form\">\n                                            <input\n                                                type=\"text\"\n                                                ref={postTitleRef}\n                                                placeholder=\"Post Title\"\n                                                required\n                                            />\n                                            <textarea\n                                                ref={postBodyRef}\n                                                placeholder=\"Post Body\"\n                                                required\n                                            ></textarea>\n                                            <button type=\"submit\">Add Post</button>\n                                        </form>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    ) : (\n                        <p>No movies found.</p>\n                    )}\n                </div>\n                <Footer />\n            </div>\n        );\n    };\n\n    return (\n        <Routes>\n            <Route path=\"/\" element={isLoggedIn ? <MovieList /> : <Login />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n        </Routes>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}