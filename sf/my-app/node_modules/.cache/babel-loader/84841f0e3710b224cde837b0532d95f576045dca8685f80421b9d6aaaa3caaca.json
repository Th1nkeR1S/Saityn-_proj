{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: ''\n  });\n  const [newPost, setNewPost] = useState({\n    title: '',\n    body: ''\n  });\n  const [newComment, setNewComment] = useState({\n    content: ''\n  });\n  const navigate = useNavigate();\n\n  // Check for token on mount, redirect to login if absent\n  useEffect(() => {\n    const token = localStorage.getItem('accessToken');\n    if (!token) {\n      // Redirect to login if token is not found\n      navigate('/login');\n    } else {\n      // Token found, load movies\n      const loadMovies = async () => {\n        try {\n          const response = await axios.get('https://localhost:5133/api/movies', {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n            }\n          });\n          setMovies(response.data);\n        } catch (error) {\n          console.error('Error fetching movies:', error);\n        }\n      };\n      loadMovies();\n    }\n  }, [navigate]);\n  const loadPosts = async movieId => {\n    try {\n      const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      setPosts(prev => ({\n        ...prev,\n        [movieId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching posts:', error);\n    }\n  };\n  const loadComments = async (movieId, postId) => {\n    try {\n      const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      setComments(prev => ({\n        ...prev,\n        [postId]: response.data\n      }));\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const handleCreateMovie = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://localhost:5133/api/movies', newMovie, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      setMovies(prev => [...prev, response.data]);\n      setNewMovie({\n        title: '',\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error creating movie:', error);\n    }\n  };\n  const handleCreatePost = async (movieId, e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`https://localhost:5133/api/movies/${movieId}/posts`, newPost, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      setPosts(prev => ({\n        ...prev,\n        [movieId]: [...(prev[movieId] || []), response.data]\n      }));\n      setNewPost({\n        title: '',\n        body: ''\n      });\n    } catch (error) {\n      console.error('Error creating post:', error);\n    }\n  };\n  const handleCreateComment = async (movieId, postId, e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`, newComment, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      });\n      setComments(prev => ({\n        ...prev,\n        [postId]: [...(prev[postId] || []), response.data]\n      }));\n      setNewComment({\n        content: ''\n      });\n    } catch (error) {\n      console.error('Error creating comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Movies List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCreateMovie,\n        className: \"movie-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Movie Title\",\n          value: newMovie.title,\n          onChange: e => setNewMovie({\n            ...newMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Movie Description\",\n          value: newMovie.description,\n          onChange: e => setNewMovie({\n            ...newMovie,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-list\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: movie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n              loadPosts(movie.id);\n            },\n            children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 33\n          }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Posts:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleCreatePost(movie.id, e),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Post Title\",\n                value: newPost.title,\n                onChange: e => setNewPost({\n                  ...newPost,\n                  title: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                placeholder: \"Post Body\",\n                value: newPost.body,\n                onChange: e => setNewPost({\n                  ...newPost,\n                  body: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Add Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 41\n            }, this), posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => loadComments(movie.id, post.id),\n                children: \"Show Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 49\n              }, this), comments[post.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comments\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Comments:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => handleCreateComment(movie.id, post.id, e),\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"Comment Content\",\n                    value: newComment.content,\n                    onChange: e => setNewComment({\n                      ...newComment,\n                      content: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Add Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 57\n                }, this), comments[post.id].map(comment => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: comment.content\n                }, comment.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 61\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 53\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 45\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 37\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading movies...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"H3vtpD5yHAzlI54Ezod81B4XgV8=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useNavigate","axios","Header","Footer","jsxDEV","_jsxDEV","App","_s","movies","setMovies","expandedMovieId","setExpandedMovieId","posts","setPosts","comments","setComments","newMovie","setNewMovie","title","description","newPost","setNewPost","body","newComment","setNewComment","content","navigate","token","localStorage","getItem","loadMovies","response","get","headers","Authorization","data","error","console","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","post","handleCreatePost","handleCreateComment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","movie","onClick","id","comment","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\n\nconst App = () => {\n    const [movies, setMovies] = useState([]);\n    const [expandedMovieId, setExpandedMovieId] = useState(null);\n    const [posts, setPosts] = useState({});\n    const [comments, setComments] = useState({});\n    const [newMovie, setNewMovie] = useState({ title: '', description: '' });\n    const [newPost, setNewPost] = useState({ title: '', body: '' });\n    const [newComment, setNewComment] = useState({ content: '' });\n\n    const navigate = useNavigate();\n\n    // Check for token on mount, redirect to login if absent\n    useEffect(() => {\n        const token = localStorage.getItem('accessToken');\n        if (!token) {\n            // Redirect to login if token is not found\n            navigate('/login');\n        } else {\n            // Token found, load movies\n            const loadMovies = async () => {\n                try {\n                    const response = await axios.get('https://localhost:5133/api/movies', {\n                        headers: {\n                            Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                        },\n                    });\n                    setMovies(response.data);\n                } catch (error) {\n                    console.error('Error fetching movies:', error);\n                }\n            };\n            loadMovies();\n        }\n    }, [navigate]);\n\n    const loadPosts = async (movieId) => {\n        try {\n            const response = await axios.get(`https://localhost:5133/api/movies/${movieId}/posts`, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                },\n            });\n            setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n        } catch (error) {\n            console.error('Error fetching posts:', error);\n        }\n    };\n\n    const loadComments = async (movieId, postId) => {\n        try {\n            const response = await axios.get(\n                `https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`,\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                    },\n                }\n            );\n            setComments((prev) => ({\n                ...prev,\n                [postId]: response.data,\n            }));\n        } catch (error) {\n            console.error('Error fetching comments:', error);\n        }\n    };\n\n    const handleCreateMovie = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post('https://localhost:5133/api/movies', newMovie, {\n                headers: {\n                    Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                },\n            });\n            setMovies((prev) => [...prev, response.data]);\n            setNewMovie({ title: '', description: '' });\n        } catch (error) {\n            console.error('Error creating movie:', error);\n        }\n    };\n\n    const handleCreatePost = async (movieId, e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\n                `https://localhost:5133/api/movies/${movieId}/posts`,\n                newPost,\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                    },\n                }\n            );\n            setPosts((prev) => ({\n                ...prev,\n                [movieId]: [...(prev[movieId] || []), response.data],\n            }));\n            setNewPost({ title: '', body: '' });\n        } catch (error) {\n            console.error('Error creating post:', error);\n        }\n    };\n\n    const handleCreateComment = async (movieId, postId, e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\n                `https://localhost:5133/api/movies/${movieId}/posts/${postId}/comments`,\n                newComment,\n                {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\n                    },\n                }\n            );\n            setComments((prev) => ({\n                ...prev,\n                [postId]: [...(prev[postId] || []), response.data],\n            }));\n            setNewComment({ content: '' });\n        } catch (error) {\n            console.error('Error creating comment:', error);\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"content\">\n                <h1>Movies List</h1>\n                <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                    <h2>Create New Movie</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Movie Title\"\n                        value={newMovie.title}\n                        onChange={(e) => setNewMovie({ ...newMovie, title: e.target.value })}\n                    />\n                    <textarea\n                        placeholder=\"Movie Description\"\n                        value={newMovie.description}\n                        onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })}\n                    ></textarea>\n                    <button type=\"submit\">Add Movie</button>\n                </form>\n\n                {movies.length > 0 ? (\n                    <div className=\"movie-list\">\n                        {movies.map((movie) => (\n                            <div className=\"movie-item\" key={movie.id}>\n                                <h2>{movie.title}</h2>\n                                <p>{movie.description}</p>\n                                <button\n                                    onClick={() => {\n                                        setExpandedMovieId((prev) =>\n                                            prev === movie.id ? null : movie.id\n                                        );\n                                        loadPosts(movie.id);\n                                    }}\n                                >\n                                    {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                </button>\n                                {expandedMovieId === movie.id && posts[movie.id] && (\n                                    <div className=\"posts\">\n                                        <h3>Posts:</h3>\n                                        <form onSubmit={(e) => handleCreatePost(movie.id, e)}>\n                                            <input\n                                                type=\"text\"\n                                                placeholder=\"Post Title\"\n                                                value={newPost.title}\n                                                onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n                                            />\n                                            <textarea\n                                                placeholder=\"Post Body\"\n                                                value={newPost.body}\n                                                onChange={(e) => setNewPost({ ...newPost, body: e.target.value })}\n                                            ></textarea>\n                                            <button type=\"submit\">Add Post</button>\n                                        </form>\n                                        {posts[movie.id].map((post) => (\n                                            <div className=\"post-item\" key={post.id}>\n                                                <h4>{post.title}</h4>\n                                                <p>{post.body}</p>\n                                                <button onClick={() => loadComments(movie.id, post.id)}>\n                                                    Show Comments\n                                                </button>\n                                                {comments[post.id] && (\n                                                    <div className=\"comments\">\n                                                        <h5>Comments:</h5>\n                                                        <form\n                                                            onSubmit={(e) => handleCreateComment(movie.id, post.id, e)}\n                                                        >\n                                                            <input\n                                                                type=\"text\"\n                                                                placeholder=\"Comment Content\"\n                                                                value={newComment.content}\n                                                                onChange={(e) =>\n                                                                    setNewComment({ ...newComment, content: e.target.value })\n                                                                }\n                                                            />\n                                                            <button type=\"submit\">Add Comment</button>\n                                                        </form>\n                                                        {comments[post.id].map((comment) => (\n                                                            <p key={comment.id}>{comment.content}</p>\n                                                        ))}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        ))}\n                    </div>\n                ) : (\n                    <p>Loading movies...</p>\n                )}\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}