{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marka\\\\Frontas\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [expandedPostId, setExpandedPostId] = useState(null); // Separate state for post editing\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n  const navigate = useNavigate();\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n  const movieTitleRef = useRef(null);\n  const movieDescriptionRef = useRef(null);\n  const postTitleRef = useRef(null);\n  const postBodyRef = useRef(null);\n  const commentContentRef = useRef(null);\n\n  // Extract userId from the token\n  const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n  useEffect(() => {\n    const loadMovies = async () => {\n      try {\n        const response = await axiosInstance.get('/movies');\n        setMovies(response.data);\n      } catch (error) {\n        console.error('Error fetching movies:', error);\n      }\n    };\n    if (isLoggedIn) {\n      loadMovies();\n    }\n  }, [isLoggedIn]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  }\n  const handleLogout = () => {\n    localStorage.removeItem('accessToken');\n    navigate('/login');\n  };\n  const MovieList = () => {\n    const loadPosts = async movieId => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    const loadComments = async (movieId, postId) => {\n      try {\n        const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: response.data\n        }));\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    const handleCreateMovie = async e => {\n      e.preventDefault();\n      try {\n        const newMovieData = {\n          title: movieTitleRef.current.value,\n          description: movieDescriptionRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post('/movies', newMovieData);\n        setMovies(prev => [...prev, response.data]);\n        movieTitleRef.current.value = '';\n        movieDescriptionRef.current.value = '';\n        setModalVisible(false); // Close modal after submitting\n      } catch (error) {\n        console.error('Error creating movie:', error);\n      }\n    };\n    const handleEditMovie = async (movieId, e) => {\n      e.preventDefault();\n      const updatedMovieData = {\n        title: movieTitleRef.current.value,\n        description: movieDescriptionRef.current.value\n      };\n      try {\n        const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n        setMovies(prev => prev.map(movie => movie.id === movieId ? response.data : movie));\n        setExpandedMovieId(null); // Close edit mode\n      } catch (error) {\n        console.error('Error editing movie:', error);\n      }\n    };\n    const handleDeleteMovie = async movieId => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}`);\n        setMovies(prev => prev.filter(movie => movie.id !== movieId));\n      } catch (error) {\n        console.error('Error deleting movie:', error);\n      }\n    };\n    const handleCreatePost = async (movieId, e) => {\n      e.preventDefault();\n      const newPostData = {\n        title: postTitleRef.current.value,\n        body: postBodyRef.current.value,\n        userId: userID\n      };\n      try {\n        const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: [...(prev[movieId] || []), response.data]\n        }));\n        postTitleRef.current.value = '';\n        postBodyRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating post:', error);\n      }\n    };\n    const handleEditPost = async (movieId, postId, e) => {\n      e.preventDefault();\n      const updatedPostData = {\n        title: postTitleRef.current.value,\n        body: postBodyRef.current.value\n      };\n      try {\n        const response = await axiosInstance.put(`/movies/${movieId}/posts/${postId}`, updatedPostData);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: prev[movieId].map(post => post.id === postId ? response.data : post)\n        }));\n        setExpandedPostId(null); // Close post edit form\n      } catch (error) {\n        console.error('Error editing post:', error);\n      }\n    };\n    const handleDeletePost = async (movieId, postId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n        setPosts(prev => ({\n          ...prev,\n          [movieId]: prev[movieId].filter(post => post.id !== postId)\n        }));\n      } catch (error) {\n        console.error('Error deleting post:', error);\n      }\n    };\n    const handleCreateComment = async (movieId, postId, e) => {\n      e.preventDefault();\n      try {\n        const newCommentData = {\n          content: commentContentRef.current.value,\n          userId: userID\n        };\n        const response = await axiosInstance.post(`/movies/${movieId}/posts/${postId}/comments`, newCommentData);\n        setComments(prev => ({\n          ...prev,\n          [postId]: [...(prev[postId] || []), response.data]\n        }));\n        commentContentRef.current.value = '';\n      } catch (error) {\n        console.error('Error creating comment:', error);\n      }\n    };\n    const handleDeleteComment = async (movieId, postId, commentId) => {\n      try {\n        await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n        setComments(prev => ({\n          ...prev,\n          [postId]: prev[postId].filter(comment => comment.id !== commentId)\n        }));\n      } catch (error) {\n        console.error('Error deleting comment:', error);\n      }\n    };\n    const handleMovieEditClick = movieId => {\n      setExpandedMovieId(movieId); // Open the edit form for the selected movie\n    };\n    const handlePostEditClick = (movieId, postId) => {\n      setExpandedPostId(postId); // Open the edit form for the selected post\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setModalVisible(true),\n          className: \"create-movie-btn\",\n          children: \"Create New Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }, this), modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create New Movie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleCreateMovie,\n            className: \"movie-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              ref: movieTitleRef,\n              placeholder: \"Movie Title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: movieDescriptionRef,\n              placeholder: \"Movie Description\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Movie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setModalVisible(false),\n              className: \"close-modal-btn\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }, this), movies.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: movie.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteMovie(movie.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMovieEditClick(movie.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 35\n            }, this), expandedMovieId === movie.id && /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => handleEditMovie(movie.id, e),\n              className: \"edit-movie-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                ref: movieTitleRef,\n                defaultValue: movie.title,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                ref: movieDescriptionRef,\n                defaultValue: movie.description,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Save Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => setExpandedMovieId(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setExpandedMovieId(prev => prev === movie.id ? null : movie.id);\n                loadPosts(movie.id);\n              },\n              children: expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 35\n            }, this), expandedMovieId === movie.id && posts[movie.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"posts\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Posts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: e => handleCreatePost(movie.id, e),\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  ref: postTitleRef,\n                  placeholder: \"Post Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  ref: postBodyRef,\n                  placeholder: \"Post Body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 47\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 43\n              }, this), posts[movie.id].length > 0 ? posts[movie.id].map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 55\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 55\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeletePost(movie.id, post.id),\n                  children: \"Delete Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 55\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handlePostEditClick(movie.id, post.id),\n                  children: \"Edit Post\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 55\n                }, this), expandedPostId === post.id && /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: e => handleEditPost(movie.id, post.id, e),\n                  className: \"edit-post-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    ref: postTitleRef,\n                    defaultValue: post.title,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 63\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    ref: postBodyRef,\n                    defaultValue: post.body,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 63\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Save Changes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 63\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => setExpandedPostId(null),\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 63\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 59\n                }, this)]\n              }, post.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 51\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No posts available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 39\n            }, this)]\n          }, movie.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 31\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 23\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading movies...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"H0SX61eWrQxRA5uUOxajewYnD8E=\", true);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","movies","setMovies","useState","expandedMovieId","setExpandedMovieId","expandedPostId","setExpandedPostId","modalVisible","setModalVisible","posts","setPosts","comments","setComments","navigate","useNavigate","isLoggedIn","localStorage","getItem","movieTitleRef","useRef","movieDescriptionRef","postTitleRef","postBodyRef","commentContentRef","userID","jwtDecode","sub","useEffect","loadMovies","response","axiosInstance","get","data","error","console","_jsxDEV","Login","fileName","_jsxFileName","lineNumber","columnNumber","handleLogout","removeItem","MovieList","loadPosts","movieId","prev","loadComments","postId","handleCreateMovie","e","preventDefault","newMovieData","title","current","value","description","userId","post","handleEditMovie","updatedMovieData","put","map","movie","id","handleDeleteMovie","delete","filter","handleCreatePost","newPostData","body","handleEditPost","updatedPostData","handleDeletePost","handleCreateComment","newCommentData","content","handleDeleteComment","commentId","comment","handleMovieEditClick","handlePostEditClick","className","children","Header","onClick","Modal","onSubmit","type","ref","placeholder","required","length","defaultValue","Footer","Routes","Route","path","element","_c","$RefreshReg$"],"sources":["C:/Users/marka/Frontas/my-app/src/App.js"],"sourcesContent":["const App = () => {\n  const [movies, setMovies] = useState([]);\n  const [expandedMovieId, setExpandedMovieId] = useState(null);\n  const [expandedPostId, setExpandedPostId] = useState(null); // Separate state for post editing\n  const [modalVisible, setModalVisible] = useState(false);\n  const [posts, setPosts] = useState({});\n  const [comments, setComments] = useState({});\n\n  const navigate = useNavigate();\n  const isLoggedIn = localStorage.getItem('accessToken') !== null;\n\n  const movieTitleRef = useRef(null);\n  const movieDescriptionRef = useRef(null);\n  const postTitleRef = useRef(null);\n  const postBodyRef = useRef(null);\n  const commentContentRef = useRef(null);\n\n  // Extract userId from the token\n  const userID = isLoggedIn ? jwtDecode(localStorage.getItem('accessToken')).sub : null;\n\n  useEffect(() => {\n      const loadMovies = async () => {\n          try {\n              const response = await axiosInstance.get('/movies');\n              setMovies(response.data);\n          } catch (error) {\n              console.error('Error fetching movies:', error);\n          }\n      };\n\n      if (isLoggedIn) {\n          loadMovies();\n      }\n  }, [isLoggedIn]);\n\n  if (!isLoggedIn) {\n      return <Login />;\n  }\n\n  const handleLogout = () => {\n      localStorage.removeItem('accessToken');\n      navigate('/login');\n  };\n\n  const MovieList = () => {\n      const loadPosts = async (movieId) => {\n          try {\n              const response = await axiosInstance.get(`/movies/${movieId}/posts`);\n              setPosts((prev) => ({ ...prev, [movieId]: response.data }));\n          } catch (error) {\n              console.error('Error fetching posts:', error);\n          }\n      };\n\n      const loadComments = async (movieId, postId) => {\n          try {\n              const response = await axiosInstance.get(`/movies/${movieId}/posts/${postId}/comments`);\n              setComments((prev) => ({\n                  ...prev,\n                  [postId]: response.data,\n              }));\n          } catch (error) {\n              console.error('Error fetching comments:', error);\n          }\n      };\n\n      const handleCreateMovie = async (e) => {\n          e.preventDefault();\n          try {\n              const newMovieData = {\n                  title: movieTitleRef.current.value,\n                  description: movieDescriptionRef.current.value,\n                  userId: userID, \n              };\n              const response = await axiosInstance.post('/movies', newMovieData);\n              setMovies((prev) => [...prev, response.data]);\n              movieTitleRef.current.value = '';\n              movieDescriptionRef.current.value = '';\n              setModalVisible(false); // Close modal after submitting\n          } catch (error) {\n              console.error('Error creating movie:', error);\n          }\n      };\n\n      const handleEditMovie = async (movieId, e) => {\n          e.preventDefault();\n      \n          const updatedMovieData = {\n              title: movieTitleRef.current.value,\n              description: movieDescriptionRef.current.value,\n          };\n      \n          try {\n              const response = await axiosInstance.put(`/movies/${movieId}`, updatedMovieData);\n              setMovies((prev) =>\n                  prev.map((movie) => (movie.id === movieId ? response.data : movie))\n              );\n              setExpandedMovieId(null); // Close edit mode\n          } catch (error) {\n              console.error('Error editing movie:', error);\n          }\n      };\n\n      const handleDeleteMovie = async (movieId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}`);\n              setMovies((prev) => prev.filter((movie) => movie.id !== movieId));\n          } catch (error) {\n              console.error('Error deleting movie:', error);\n          }\n      };\n\n      const handleCreatePost = async (movieId, e) => {\n          e.preventDefault();\n\n          const newPostData = {\n              title: postTitleRef.current.value,\n              body: postBodyRef.current.value,\n              userId: userID,\n          };\n\n          try {\n              const response = await axiosInstance.post(`/movies/${movieId}/posts`, newPostData);\n              setPosts((prev) => ({\n                  ...prev,\n                  [movieId]: [...(prev[movieId] || []), response.data],\n              }));\n\n              postTitleRef.current.value = '';\n              postBodyRef.current.value = '';\n          } catch (error) {\n              console.error('Error creating post:', error);\n          }\n      };\n\n      const handleEditPost = async (movieId, postId, e) => {\n          e.preventDefault();\n      \n          const updatedPostData = {\n              title: postTitleRef.current.value,\n              body: postBodyRef.current.value,\n          };\n      \n          try {\n              const response = await axiosInstance.put(`/movies/${movieId}/posts/${postId}`, updatedPostData);\n              setPosts((prev) => ({\n                  ...prev,\n                  [movieId]: prev[movieId].map((post) =>\n                      post.id === postId ? response.data : post\n                  ),\n              }));\n              setExpandedPostId(null); // Close post edit form\n          } catch (error) {\n              console.error('Error editing post:', error);\n          }\n      };\n\n      const handleDeletePost = async (movieId, postId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}/posts/${postId}`);\n              setPosts((prev) => ({\n                  ...prev,\n                  [movieId]: prev[movieId].filter((post) => post.id !== postId),\n              }));\n          } catch (error) {\n              console.error('Error deleting post:', error);\n          }\n      };\n\n      const handleCreateComment = async (movieId, postId, e) => {\n          e.preventDefault();\n          try {\n              const newCommentData = {\n                  content: commentContentRef.current.value,\n                  userId: userID,\n              };\n              const response = await axiosInstance.post(\n                  `/movies/${movieId}/posts/${postId}/comments`,\n                  newCommentData\n              );\n              setComments((prev) => ({\n                  ...prev,\n                  [postId]: [...(prev[postId] || []), response.data],\n              }));\n              commentContentRef.current.value = '';\n          } catch (error) {\n              console.error('Error creating comment:', error);\n          }\n      };\n\n      const handleDeleteComment = async (movieId, postId, commentId) => {\n          try {\n              await axiosInstance.delete(`/movies/${movieId}/posts/${postId}/comments/${commentId}`);\n              setComments((prev) => ({\n                  ...prev,\n                  [postId]: prev[postId].filter((comment) => comment.id !== commentId),\n              }));\n          } catch (error) {\n              console.error('Error deleting comment:', error);\n          }\n      };\n\n      const handleMovieEditClick = (movieId) => {\n          setExpandedMovieId(movieId); // Open the edit form for the selected movie\n      };\n\n      const handlePostEditClick = (movieId, postId) => {\n          setExpandedPostId(postId); // Open the edit form for the selected post\n      };\n\n      return (\n          <div className=\"App\">\n              <Header />\n              <div className=\"content\">\n                  <h1>Movies List</h1>\n                  <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n\n                  <button onClick={() => setModalVisible(true)} className=\"create-movie-btn\">\n                      Create New Movie\n                  </button>\n\n                  {modalVisible && (\n                      <Modal>\n                          <h2>Create New Movie</h2>\n                          <form onSubmit={handleCreateMovie} className=\"movie-form\">\n                              <input\n                                  type=\"text\"\n                                  ref={movieTitleRef}\n                                  placeholder=\"Movie Title\"\n                                  required\n                              />\n                              <textarea\n                                  ref={movieDescriptionRef}\n                                  placeholder=\"Movie Description\"\n                                  required\n                              ></textarea>\n                              <button type=\"submit\">Add Movie</button>\n                              <button\n                                  type=\"button\"\n                                  onClick={() => setModalVisible(false)}\n                                  className=\"close-modal-btn\"\n                              >\n                                  Close\n                              </button>\n                          </form>\n                      </Modal>\n                  )}\n\n                  {movies.length > 0 ? (\n                      <div className=\"movie-list\">\n                          {movies.map((movie) => (\n                              <div className=\"movie-item\" key={movie.id}>\n                                  <h2>{movie.title}</h2>\n                                  <p>{movie.description}</p>\n                                  <button onClick={() => handleDeleteMovie(movie.id)}>Delete</button>\n                                  <button onClick={() => handleMovieEditClick(movie.id)}>Edit</button>\n                                  {expandedMovieId === movie.id && (\n                                      <form onSubmit={(e) => handleEditMovie(movie.id, e)} className=\"edit-movie-form\">\n                                          <input\n                                              type=\"text\"\n                                              ref={movieTitleRef}\n                                              defaultValue={movie.title}\n                                              required\n                                          />\n                                          <textarea\n                                              ref={movieDescriptionRef}\n                                              defaultValue={movie.description}\n                                              required\n                                          ></textarea>\n                                          <button type=\"submit\">Save Changes</button>\n                                          <button type=\"button\" onClick={() => setExpandedMovieId(null)}>\n                                              Cancel\n                                          </button>\n                                      </form>\n                                  )}\n                                  <button\n                                      onClick={() => {\n                                          setExpandedMovieId((prev) =>\n                                              prev === movie.id ? null : movie.id\n                                          );\n                                          loadPosts(movie.id);\n                                      }}\n                                  >\n                                      {expandedMovieId === movie.id ? 'Hide Details' : 'Show Posts'}\n                                  </button>\n                                  {expandedMovieId === movie.id && posts[movie.id] && (\n                                      <div className=\"posts\">\n                                          <h3>Posts:</h3>\n                                          <form onSubmit={(e) => handleCreatePost(movie.id, e)}>\n                                              <input\n                                                  type=\"text\"\n                                                  ref={postTitleRef}\n                                                  placeholder=\"Post Title\"\n                                              />\n                                              <textarea\n                                                  ref={postBodyRef}\n                                                  placeholder=\"Post Body\"\n                                              ></textarea>\n                                              <button type=\"submit\">Add Post</button>\n                                          </form>\n                                          {posts[movie.id].length > 0 ? (\n                                              posts[movie.id].map((post) => (\n                                                  <div className=\"post-item\" key={post.id}>\n                                                      <h4>{post.title}</h4>\n                                                      <p>{post.body}</p>\n                                                      <button onClick={() => handleDeletePost(movie.id, post.id)}>Delete Post</button>\n                                                      <button onClick={() => handlePostEditClick(movie.id, post.id)}>Edit Post</button>\n                                                      {expandedPostId === post.id && (\n                                                          <form onSubmit={(e) => handleEditPost(movie.id, post.id, e)} className=\"edit-post-form\">\n                                                              <input\n                                                                  type=\"text\"\n                                                                  ref={postTitleRef}\n                                                                  defaultValue={post.title}\n                                                                  required\n                                                              />\n                                                              <textarea\n                                                                  ref={postBodyRef}\n                                                                  defaultValue={post.body}\n                                                                  required\n                                                              ></textarea>\n                                                              <button type=\"submit\">Save Changes</button>\n                                                              <button type=\"button\" onClick={() => setExpandedPostId(null)}>\n                                                                  Cancel\n                                                              </button>\n                                                          </form>\n                                                      )}\n                                                  </div>\n                                              ))\n                                          ) : (\n                                              <p>No posts available.</p>\n                                          )}\n                                      </div>\n                                  )}\n                              </div>\n                          ))}\n                      </div>\n                  ) : (\n                      <p>Loading movies...</p>\n                  )}\n              </div>\n              <Footer />\n          </div>\n      );\n  };\n\n  return (\n      <Routes>\n          <Route path=\"/\" element={<MovieList />} />\n          <Route path=\"/login\" element={<Login />} />\n      </Routes>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}